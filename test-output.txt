
> conversion-engine-solid@2.0.0 test
> jest

ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
See more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced
FAIL src/renderers/__tests__/comprehensive-renderer.test.ts (6.412 s)
  Comprehensive Renderer Tests
    EmptyLine Rendering Across All Formats
      ‚úì should render single empty lines correctly in all formats (10 ms)
      ‚úì should render multiple consecutive empty lines correctly (21 ms)
      ‚úì should handle empty lines at section boundaries (54 ms)
    AnnotationLine Rendering Across All Formats
      ‚úì should render comment annotations correctly in all formats (6 ms)
      ‚úì should render instruction annotations with proper formatting (2 ms)
      ‚úì should render tempo annotations with format-specific styling (1 ms)
      ‚úì should render dynamics annotations correctly (2 ms)
    Chord Placement Accuracy Tests
      ‚úì should place chords above text for above-placement formats (1 ms)
      ‚úì should place chords inline for inline-placement formats (1 ms)
      ‚úì should handle mixed chord placements correctly (12 ms)
      ‚úì should maintain chord position accuracy with complex chords (11 ms)
    Whitespace Rule Validation Tests
      ‚úì should apply format-specific spacing for ChordPro (6 ms)
      ‚úì should apply format-specific spacing for OnSong
      ‚úì should apply format-specific spacing for Songbook
      ‚úì should maintain consistent section spacing (3 ms)
      ‚úì should handle annotation spacing correctly (1 ms)
    Format-Specific Output Validation
      ‚úì should generate valid ChordPro output (52 ms)
      ‚úì should generate valid OnSong output (1 ms)
      ‚úì should generate valid Songbook output (1 ms)
      ‚úì should generate valid Guitar Tabs output (1 ms)
      ‚úì should generate valid Nashville output (1 ms)
    Rendering Performance and Metadata
      ‚úì should provide accurate rendering metadata (12 ms)
      ‚úì should handle rendering options correctly (2 ms)
      ‚úì should maintain performance with large chordsheets (3 ms)
    Error Handling and Edge Cases
      ‚úï should handle empty chordsheets gracefully
      ‚úï should handle chordsheets with only empty lines (64 ms)
      ‚úì should handle malformed chord data gracefully (8 ms)

  ‚óè Comprehensive Renderer Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty chordsheets gracefully

    Cannot render chordsheet in songbook format

      74 |         
      75 |         if (!this.canRender(chordsheet)) {
    > 76 |             throw new Error(`Cannot render chordsheet in ${this.format} format`);
         |                   ^
      77 |         }
      78 |
      79 |         const mergedOptions = this.mergeOptions(options);

      at SongbookRenderer.render (src/renderers/core/base-renderer.ts:76:19)
      at src/renderers/__tests__/comprehensive-renderer.test.ts:681:33
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/renderers/__tests__/comprehensive-renderer.test.ts:679:15)

  ‚óè Comprehensive Renderer Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle chordsheets with only empty lines

    Cannot render chordsheet in songbook format

      74 |         
      75 |         if (!this.canRender(chordsheet)) {
    > 76 |             throw new Error(`Cannot render chordsheet in ${this.format} format`);
         |                   ^
      77 |         }
      78 |
      79 |         const mergedOptions = this.mergeOptions(options);

      at SongbookRenderer.render (src/renderers/core/base-renderer.ts:76:19)
      at src/renderers/__tests__/comprehensive-renderer.test.ts:707:33
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/renderers/__tests__/comprehensive-renderer.test.ts:705:15)

FAIL tests/e2e/accessibility.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Accessibility Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/accessibility.spec.ts:3:6)

FAIL tests/components/editor/OutputPreview.test.tsx (9.312 s)
  OutputPreview
    Basic Rendering
      ‚úì renders empty state when no content is provided (208 ms)
      ‚úì displays the provided string value (legacy support) (109 ms)
      ‚úì displays Preview header (79 ms)
      ‚úï applies custom className (1204 ms)
    Chordsheet Rendering
      ‚úì renders chordsheet with metadata (107 ms)
      ‚úì renders sections without chordsheet wrapper (84 ms)
      ‚úì prioritizes chordsheet over sections over string value (9 ms)
      ‚úì handles compact mode (100 ms)
    Loading and Error States
      ‚úì shows loading overlay when isLoading is true (108 ms)
      ‚úì shows progress indicator when progress is provided (95 ms)
      ‚úì displays error message when error is provided (8 ms)
      ‚úì prioritizes error display over loading (81 ms)
    SOLID Architecture Integration
      ‚úï should publish preview update events (7 ms)
      ‚úï should auto-save preview content when enabled (1010 ms)
      ‚úï should handle conversion errors gracefully (1010 ms)
      ‚úï should subscribe to conversion events (5 ms)
      ‚úï should handle real-time updates from conversion engine (1081 ms)
    Accessibility
      ‚úï has proper accessibility attributes (406 ms)
      ‚úï should announce loading state to screen readers (99 ms)
      ‚úï should announce errors to screen readers (13 ms)
      ‚úï should support keyboard navigation (84 ms)
    Performance
      ‚úì should memoize rendered content (9 ms)
      ‚úï should cleanup event subscriptions on unmount (3 ms)
      ‚úì should handle large chordsheets efficiently (495 ms)
    Error Handling
      ‚úï should handle missing services gracefully (3 ms)
      ‚úï should handle malformed chordsheet data (182 ms)

  ‚óè OutputPreview ‚Ä∫ Basic Rendering ‚Ä∫ applies custom className

    TestingLibraryElementError: Unable to find an accessible element with the role "main"

    Here are the accessible roles:

      heading:

      Name "Preview":
      [36m<h3[39m
        [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Toggle line numbers":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle line numbers"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Toggle compact mode":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle compact mode"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 custom-class"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle line numbers"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m#[0m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle compact mode"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mCompact[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"font-mono text-sm leading-relaxed"[39m
              [36m>[39m
                [36m<pre[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-gray-900 dark:text-dark-text"[39m
                  [33mstyle[39m=[32m"font-family: JetBrains Mono, Consolas, Monaco, \"Courier New\", monospace; line-height: 1.5; font-size: 0.875rem; tab-size: 2;"[39m
                [36m>[39m
                  [0mtest[0m
                [36m</pre>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      168 |       // If the component passes the className to its main container, this should work.
      169 |       // If OutputPreview's root element is a div with role='main', this is a good selector.
    > 170 |       const previewContainer = screen.getByRole('main');
          |                                       ^
      171 |       expect(previewContainer).toHaveClass('custom-class');
      172 |     });
      173 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:170:39)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should publish preview update events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"chordsheet": {"id": "test-1", "originalKey": "C", "sections": [], "title": "Test Song"}}, "type": "PreviewUpdated"}

    Number of calls: 0

      330 |       );
      331 |
    > 332 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      333 |         expect.objectContaining({
      334 |           type: 'PreviewUpdated',
      335 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:332:40)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should auto-save preview content when enabled

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"chordsheet": {"id": "test-1", "originalKey": "C", "sections": [], "title": "Test Song"}}

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
            [36m>[39m
              [36m<h3[39m
                [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
              [36m>[39m
                [0mPreview[0m
              [36m</h3>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-2"[39m
                [36m>[39m
                  [36m<button[39m
                    [33maria-label[39m=[32m"Toggle line numbers"[39m
                    [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0m#[0m
                  [36m</button>[39m
                  [36m<button[39m
                    [33maria-label[39m=[32m"Toggle compact mode"[39m
                    [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mCompact[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
              [36m>[39m
                [36m<div[39m
                  [33maria-label[39m=[32m"Chord sheet preview"[39m
                  [33mclass[39m=[32m"space-y-4"[39m
                  [33mrole[39m=[32m"main"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"mb-6 pb-4 border-b border-gray-200 dark:border-dark-border"[39m
                  [36m>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"font-bold text-gray-900 dark:text-dark-text text-xl"[39m
                    [36m>[39m
                      [0mTest Song[0m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"text-gray-500 dark:text-gray-400 mt-1 text-sm"[39m
                    [36m>[39m
                      [0mKey: [0m
                      [0mC[0m
                    [36m</p>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      355 |
      356 |       await waitFor(() => {
    > 357 |         expect(mockStorageService.save).toHaveBeenCalledWith(
          |                                         ^
      358 |           expect.any(String), // The key for saving
      359 |           expect.objectContaining({
      360 |             chordsheet: chordsheet

      at tests/components/editor/OutputPreview.test.tsx:357:41
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should handle conversion errors gracefully

    Unable to find an element with the text: /conversion error/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle line numbers"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m#[0m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle compact mode"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mCompact[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"font-mono text-sm leading-relaxed"[39m
              [36m>[39m
                [36m<pre[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-gray-900 dark:text-dark-text"[39m
                  [33mstyle[39m=[32m"font-family: JetBrains Mono, Consolas, Monaco, \"Courier New\", monospace; line-height: 1.5; font-size: 0.875rem; tab-size: 2;"[39m
                [36m>[39m
                  [0mtest content[0m
                [36m</pre>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      376 |       );
      377 |
    > 378 |       await waitFor(() => {
          |                    ^
      379 |         expect(screen.getByText(/conversion error/i)).toBeInTheDocument();
      380 |       });
      381 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:378:20)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should subscribe to conversion events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "ConversionCompleted", Any<Function>

    Number of calls: 0

      390 |       );
      391 |
    > 392 |       expect(mockEventManager.subscribe).toHaveBeenCalledWith(
          |                                          ^
      393 |         'ConversionCompleted',
      394 |         expect.any(Function)
      395 |       );

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:392:42)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should handle real-time updates from conversion engine

    Unable to find an element with the text: Converted content. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col items-center justify-center h-full text-center p-8"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mb-4"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"mx-auto text-gray-300 dark:text-gray-600 h-16 w-16"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"1.5"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</div>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"font-medium text-gray-900 dark:text-dark-text text-lg"[39m
                [36m>[39m
                  [0mNo content to preview[0m
                [36m</h3>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-gray-500 dark:text-gray-400 max-w-sm text-base"[39m
                [36m>[39m
                  [0mEnter or paste your chord sheet content in the editor to see the converted output here.[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      425 |       }
      426 |
    > 427 |       await waitFor(() => {
          |                    ^
      428 |         expect(screen.getByText('Converted content')).toBeInTheDocument();
      429 |       });
      430 |     });

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:427:20)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ has proper accessibility attributes

    TestingLibraryElementError: Unable to find an accessible element with the role "region" and name "Verse section"

    Here are the accessible roles:

      heading:

      Name "Preview":
      [36m<h3[39m
        [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
      [36m/>[39m

      Name "Test Song":
      [36m<h1[39m
        [33mclass[39m=[32m"font-bold text-gray-900 dark:text-dark-text text-xl"[39m
      [36m/>[39m

      Name "Verse 1":
      [36m<h3[39m
        [33mclass[39m=[32m"text-sm font-semibold text-gray-700 uppercase tracking-wide"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Toggle line numbers":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle line numbers"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Toggle compact mode":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle compact mode"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------
      main:

      Name "Chord sheet preview":
      [36m<div[39m
        [33maria-label[39m=[32m"Chord sheet preview"[39m
        [33mclass[39m=[32m"space-y-4"[39m
        [33mrole[39m=[32m"main"[39m
      [36m/>[39m

      --------------------------------------------------
      paragraph:

      Name "":
      [36m<p[39m
        [33mclass[39m=[32m"text-gray-500 dark:text-gray-400 mt-1 text-sm"[39m
      [36m/>[39m

      --------------------------------------------------
      region:

      Name "Verse 1 section":
      [36m<div[39m
        [33maria-label[39m=[32m"Verse 1 section"[39m
        [33mclass[39m=[32m"section mb-6 border-l-4 border-blue-300 bg-blue-50/30 mb-4"[39m
        [33mrole[39m=[32m"region"[39m
      [36m/>[39m

      --------------------------------------------------
      text:

      Name "Text line: Test line":
      [36m<div[39m
        [33maria-label[39m=[32m"Text line: Test line"[39m
        [33mclass[39m=[32m"text-line mb-1"[39m
        [33mrole[39m=[32m"text"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle line numbers"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m#[0m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle compact mode"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mCompact[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Chord sheet preview"[39m
                [33mclass[39m=[32m"space-y-4"[39m
                [33mrole[39m=[32m"main"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mb-6 pb-4 border-b border-gray-200 dark:border-dark-border"[39m
                [36m>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"font-bold text-gray-900 dark:text-dark-text text-xl"[39m
                  [36m>[39m
                    [0mTest Song[0m
                  [36m</h1>[39m
                  [36m<p[39m
                    [33mclass[39m=[32m"text-gray-500 dark:text-gray-400 mt-1 text-sm"[39m
                  [36m>[39m
                    [0mKey: [0m
                    [0mC[0m
                  [36m</p>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33maria-label[39m=[32m"Verse 1 section"[39m
                  [33mclass[39m=[32m"section mb-6 border-l-4 border-blue-300 bg-blue-50/30 mb-4"[39m
                  [33mrole[39m=[32m"region"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"section-header px-4 py-2 bg-white/50 border-b border-gray-200/50"[39m
                  [36m>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-sm font-semibold text-gray-700 uppercase tracking-wide"[39m
                    [36m>[39m
                      [0mVerse 1[0m
                    [36m</h3>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"section-content px-4 py-3 space-y-2"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33maria-label[39m=[32m"Text line: Test line"[39m
                      [33mclass[39m=[32m"text-line mb-1"[39m
                      [33mrole[39m=[32m"text"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"font-mono text-sm leading-relaxed whitespace-pre"[39m
                      [36m>[39m
                        [0mTest line[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      454 |       expect(screen.getByRole('main')).toHaveAttribute('aria-label', 'Chord sheet preview');
      455 |       // Assuming the section renders a role="region" with its title as aria-label
    > 456 |       expect(screen.getByRole('region', { name: 'Verse section' })).toBeInTheDocument();
          |                     ^
      457 |     });
      458 |
      459 |     it('should announce loading state to screen readers', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:456:21)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ should announce loading state to screen readers

    TestingLibraryElementError: Unable to find an element with the text: /Converting content/i, which matches selector '.sr-only'. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"absolute inset-0 flex items-center justify-center bg-white/90 dark:bg-dark-bg/90 backdrop-blur-sm z-10"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-center p-6 bg-white dark:bg-dark-surface rounded-lg shadow-lg border border-gray-200 dark:border-dark-border max-w-sm mx-4"[39m
              [36m>[39m
                [36m<div[39m
                  [33maria-live[39m=[32m"polite"[39m
                  [33mclass[39m=[32m"flex items-center justify-center space-x-3 "[39m
                  [33mrole[39m=[32m"status"[39m
                  [33mstyle[39m=[32m"opacity: 0;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"rounded-full border-2 border-gray-200 h-6 w-6"[39m
                    [33mstyle[39m=[32m"border-top-color: var(--color-blue-600);"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-600 dark:text-gray-400 text-base transition-colors duration-200"[39m
                    [33mstyle[39m=[32m"opacity: 0; transform: translateX(-10px);"[39m
                  [36m>[39m
                    [0mConverting...[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"sr-only"[39m
                  [36m>[39m
                    [0mConverting...[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col items-center justify-center h-full text-center p-8"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mb-4"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"mx-auto text-gray-300 dark:text-gray-600 h-16 w-16"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"1.5"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</div>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"font-medium text-gray-900 dark:text-dark-text text-lg"[39m
                [36m>[39m
                  [0mNo content to preview[0m
                [36m</h3>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-gray-500 dark:text-gray-400 max-w-sm text-base"[39m
                [36m>[39m
                  [0mEnter or paste your chord sheet content in the editor to see the converted output here.[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      465 |
      466 |       // This expects a visually hidden element with aria-live="polite" and the text "Converting content"
    > 467 |       const loadingAnnouncement = screen.getByText(/Converting content/i, { selector: '.sr-only' });
          |                                          ^
      468 |       expect(loadingAnnouncement).toHaveAttribute('aria-live', 'polite');
      469 |     });
      470 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:467:42)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ should announce errors to screen readers

    TestingLibraryElementError: Unable to find an element with the text: /Error occurred/i, which matches selector '.sr-only'. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-4 transition-colors duration-200"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-start"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex-shrink-0"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33mclass[39m=[32m"h-5 w-5 text-red-400 dark:text-red-500"[39m
                      [33mfill[39m=[32m"currentColor"[39m
                      [33mviewBox[39m=[32m"0 0 20 20"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33mclip-rule[39m=[32m"evenodd"[39m
                        [33md[39m=[32m"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"[39m
                        [33mfill-rule[39m=[32m"evenodd"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"ml-3 flex-1"[39m
                  [36m>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-sm font-medium text-red-800 dark:text-red-300"[39m
                    [36m>[39m
                      [0mConversion Error[0m
                    [36m</h3>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"mt-2 text-sm text-red-700 dark:text-red-400"[39m
                    [36m>[39m
                      [36m<p>[39m
                        [0mTest error[0m
                      [36m</p>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      478 |
      479 |       // This expects a visually hidden element with aria-live="assertive" and the text "Error occurred"
    > 480 |       const errorAnnouncement = screen.getByText(/Error occurred/i, { selector: '.sr-only' });
          |                                        ^
      481 |       expect(errorAnnouncement).toHaveAttribute('aria-live', 'assertive');
      482 |     });
      483 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:480:40)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ should support keyboard navigation

    expect(element).toHaveAttribute("tabIndex", "0") // element.getAttribute("tabIndex") === "0"

    Expected the element to have attribute:
      tabIndex="0"
    Received:
      null

      502 |
      503 |       const previewContainer = screen.getByRole('main');
    > 504 |       expect(previewContainer).toHaveAttribute('tabIndex', '0');
          |                                ^
      505 |     });
      506 |   });
      507 |

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:504:32)

  ‚óè OutputPreview ‚Ä∫ Performance ‚Ä∫ should cleanup event subscriptions on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      545 |
      546 |       // Expect unsubscribe to have been called at least once
    > 547 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      548 |     });
      549 |
      550 |     it('should handle large chordsheets efficiently', () => {

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:547:44)

  ‚óè OutputPreview ‚Ä∫ Error Handling ‚Ä∫ should handle missing services gracefully

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      597 |       // You might want to add an assertion here, e.g., expect(screen.getByText('Error loading services')).toBeInTheDocument();
      598 |       // if your component provides such a fallback.
    > 599 |       expect(consoleSpy).toHaveBeenCalled(); // Expect console error if services are null
          |                          ^
      600 |
      601 |       consoleSpy.mockRestore();
      602 |     });

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:599:26)

  ‚óè OutputPreview ‚Ä∫ Error Handling ‚Ä∫ should handle malformed chordsheet data

    TypeError: Cannot read properties of null (reading 'map')

      265 |                 
      266 |                 {/* Sections */}
    > 267 |                 {contentToRender.data.sections.map((section, index) => (
          |                                                ^
      268 |                   <SectionRenderer 
      269 |                     key={`section-${index}`} 
      270 |                     section={section}

      at OutputPreview (src/components/editor/OutputPreview.tsx:267:48)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:612:13)

PASS src/renderers/__tests__/integration.test.ts
  Rendering Engine Integration Tests
    Format Support
      ‚úì should support all expected formats (4 ms)
      ‚úì should correctly identify supported formats (1 ms)
    Cross-Format Rendering
      ‚úì should render to ChordPro format correctly (1 ms)
      ‚úì should render to OnSong format correctly
      ‚úì should render to Songbook format correctly
      ‚úì should render to Guitar Tabs format correctly
      ‚úì should render to Nashville format correctly (1 ms)
    Empty Line Handling
      ‚úì should handle single empty lines correctly across formats (1 ms)
      ‚úì should handle multiple consecutive empty lines correctly (1 ms)
    Annotation Handling
      ‚úì should handle different annotation types across formats (1 ms)
    Chord Placement
      ‚úì should use inline placement for inline formats (1 ms)
      ‚úì should use above placement for above formats (1 ms)
    Original Text Preservation
      ‚úì should preserve original text when requested (1 ms)
    Performance and Metadata
      ‚úì should provide rendering metadata for all formats (2 ms)
      ‚úì should handle large chordsheets efficiently (1 ms)

FAIL tests/e2e/performance.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Performance Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/performance.spec.ts:3:6)

FAIL tests/services/conversion/comprehensive-integration.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/conversion-engine-old/conversion-engine' from 'tests/services/conversion/comprehensive-integration.test.ts'

      1 | import { describe, it, expect, beforeEach, afterEach } from '@jest/globals';
    > 2 | import { ConversionEngine } from '../../../../src/services/conversion-engine-old/conversion-engine';
        | ^
      3 | import { FormatDetector } from '../format-detector';
      4 | import { FileOperations } from '../../../src/services/file-operations';
      5 | import { NotationFormat } from '../../../src/types/format';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/comprehensive-integration.test.ts:2:1)

FAIL tests/e2e/ui-functionality.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('UI Functionality Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/ui-functionality.spec.ts:3:6)

FAIL tests/services/diverse/__tests__/auto-key-detection.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../utils/chord-parser' from 'src/services/key-detector.ts'

    Require stack:
      src/services/key-detector.ts
      tests/services/diverse/__tests__/auto-key-detection.test.ts

      1 | import { Chord } from '../types';
    > 2 | import { ChordParser } from '../utils/chord-parser';
        | ^
      3 | import { MAJOR_KEY_SIGNATURES, MINOR_KEY_SIGNATURES, NASHVILLE_MAJOR_MAPPINGS } from '../constants/chord-mappings';
      4 |
      5 | /**

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/services/key-detector.ts:2:1)
      at Object.<anonymous> (tests/services/diverse/__tests__/auto-key-detection.test.ts:1:1)

FAIL tests/e2e/visual-regression.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Visual Regression Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/visual-regression.spec.ts:3:6)

FAIL tests/types/validation.test.ts
  Validation Utilities
    validateChordsheet
      ‚úì should validate a valid chordsheet (2 ms)
      ‚úì should reject null or undefined chordsheet (1 ms)
      ‚úì should reject chordsheet with missing required fields (1 ms)
      ‚úì should reject chordsheet with invalid sections (72 ms)
      ‚úì should validate chordsheet with metadata
      ‚úì should reject chordsheet with invalid metadata (1 ms)
    validateSection
      ‚úì should validate a valid section (1 ms)
      ‚úì should reject section with invalid type
      ‚úì should reject section with invalid lines (1 ms)
      ‚úì should validate all valid section types (2 ms)
    validateMetadata
      ‚úì should validate valid metadata (3 ms)
      ‚úì should reject null or undefined metadata (1 ms)
      ‚úì should reject metadata with invalid field types (194 ms)
      ‚úì should reject custom metadata with non-string values
    validateLines
      ‚úì should validate valid lines array
      ‚úì should reject non-array input (1 ms)
      ‚úï should reject array with invalid lines (3 ms)
    Factory Functions
      createTextLine
        ‚úì should create a valid TextLine (2 ms)
        ‚úì should create TextLine with default empty chords (1 ms)
        ‚úì should throw error for invalid chords (85 ms)
      createEmptyLine
        ‚úì should create a valid EmptyLine with default count (1 ms)
        ‚úì should create EmptyLine with specific count and lineNumber (1 ms)
        ‚úì should throw error for invalid count (1 ms)
      createAnnotationLine
        ‚úì should create a valid AnnotationLine with default type (1 ms)
        ‚úì should create AnnotationLine with specific type and lineNumber (1 ms)
        ‚úì should throw error for empty value (2 ms)
      createChordPlacement
        ‚úì should create a valid ChordPlacement
        ‚úì should create ChordPlacement without optional placement
        ‚úì should throw error for invalid indices (2 ms)
        ‚úì should throw error for empty values (2 ms)
    ValidationResult interface
      ‚úì should have correct structure (1 ms)
      ‚úì should handle errors and warnings (1 ms)

  ‚óè Validation Utilities ‚Ä∫ validateLines ‚Ä∫ should reject array with invalid lines

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      270 |
      271 |             const result = validateLines(invalidLines);
    > 272 |             expect(result.valid).toBe(false);
          |                                  ^
      273 |             expect(result.errors.some(e => e.field === 'lines[1]')).toBe(true);
      274 |         });
      275 |     });

      at Object.<anonymous> (tests/types/validation.test.ts:272:34)

FAIL tests/components/controls/KeySelector.test.tsx
  KeySelector
    Basic Rendering
      ‚úì renders with correct label (101 ms)
      ‚úï displays key options from transposer service (183 ms)
      ‚úì shows the selected value (94 ms)
      ‚úï includes both major and minor keys (83 ms)
    Key Selection
      ‚úì calls onChange when selection changes (19 ms)
      ‚úì is disabled when disabled prop is true (81 ms)
      ‚úì updates display when key changes (14 ms)
    SOLID Architecture Integration
      ‚úï should get available keys from key transposer (11 ms)
      ‚úï should publish key change events (93 ms)
      ‚úï should validate key selection through transposer service (202 ms)
      ‚úì should handle key relationships when requested (7 ms)
      ‚úì should handle enharmonic spellings when requested (10 ms)
    Accessibility
      ‚úì renders with proper semantic structure (11 ms)
      ‚úï should have proper ARIA attributes (83 ms)
      ‚úì should support keyboard navigation (117 ms)
      ‚úï should be accessible to screen readers (88 ms)
    Error Handling
      ‚úì should handle missing key transposer gracefully (7 ms)
      ‚úì should handle key loading errors (7 ms)
      ‚úï should handle invalid key values (82 ms)
    Performance
      ‚úì should not re-fetch keys on every render (11 ms)
      ‚úï should cleanup event subscriptions on unmount (6 ms)
    Props Validation
      ‚úï should handle all common musical keys (584 ms)
      ‚úì should handle optional props correctly (10 ms)
      ‚úï should support custom key lists (4 ms)

  ‚óè KeySelector ‚Ä∫ Basic Rendering ‚Ä∫ displays key options from transposer service

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      107 |       
      108 |       // Verify that keys are loaded from the service
    > 109 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      110 |     });
      111 |
      112 |     it('shows the selected value', () => {

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:109:50)

  ‚óè KeySelector ‚Ä∫ Basic Rendering ‚Ä∫ includes both major and minor keys

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      137 |       
      138 |       // Verify the component requests available keys
    > 139 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      140 |       
      141 |       // The actual key options will be populated from the mock
      142 |       const select = screen.getByRole('combobox');

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:139:50)

  ‚óè KeySelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should get available keys from key transposer

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      217 |       );
      218 |       
    > 219 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      220 |     });
      221 |
      222 |     it('should publish key change events', async () => {

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:219:50)

  ‚óè KeySelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should publish key change events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"newKey": "G", "oldKey": "C"}, "type": "KeyChanged"}

    Number of calls: 0

      234 |       fireEvent.change(select, { target: { value: 'G' } });
      235 |       
    > 236 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      237 |         expect.objectContaining({
      238 |           type: 'KeyChanged',
      239 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:236:40)

  ‚óè KeySelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should validate key selection through transposer service

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "InvalidKey"
    Received: ""

    Number of calls: 1

      262 |       
      263 |       // Component should still call onChange even with invalid key
    > 264 |       expect(mockOnChange).toHaveBeenCalledWith('InvalidKey');
          |                            ^
      265 |       
      266 |       // Reset mock for other tests
      267 |       mockKeyTransposer.isValidKey.mockReturnValue(true);

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:264:28)

  ‚óè KeySelector ‚Ä∫ Accessibility ‚Ä∫ should have proper ARIA attributes

    expect(element).toHaveAttribute("aria-label", Any<String>) // element.getAttribute("aria-label") === Any<String>

    Expected the element to have attribute:
      aria-label=Any<String>
    Received:
      null

      339 |       
      340 |       const select = screen.getByRole('combobox');
    > 341 |       expect(select).toHaveAttribute('aria-label', expect.any(String));
          |                      ^
      342 |     });
      343 |
      344 |     it('should support keyboard navigation', async () => {

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:341:22)

  ‚óè KeySelector ‚Ä∫ Accessibility ‚Ä∫ should be accessible to screen readers

    expect(element).toHaveValue(G)

    Expected the element to have value:
      G
    Received:
      C

      379 |       
      380 |       // The component should maintain accessible behavior
    > 381 |       expect(select).toHaveValue('G');
          |                      ^
      382 |     });
      383 |   });
      384 |

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:381:22)

  ‚óè KeySelector ‚Ä∫ Error Handling ‚Ä∫ should handle invalid key values

    expect(element).toHaveValue(InvalidKey)

    Expected the element to have value:
      InvalidKey
    Received:
      C

      444 |       const select = screen.getByRole('combobox');
      445 |       expect(select).toBeInTheDocument();
    > 446 |       expect(select).toHaveValue('InvalidKey');
          |                      ^
      447 |     });
      448 |   });
      449 |

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:446:22)

  ‚óè KeySelector ‚Ä∫ Performance ‚Ä∫ should cleanup event subscriptions on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      490 |       unmount();
      491 |       
    > 492 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      493 |     });
      494 |   });
      495 |

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:492:44)

  ‚óè KeySelector ‚Ä∫ Props Validation ‚Ä∫ should handle all common musical keys

    expect(element).toHaveValue(Cb)

    Expected the element to have value:
      Cb
    Received:
      C

      511 |         
      512 |         const select = screen.getByRole('combobox');
    > 513 |         expect(select).toHaveValue(key);
          |                        ^
      514 |         
      515 |         unmount();
      516 |       });

      at tests/components/controls/KeySelector.test.tsx:513:24
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:501:37)

  ‚óè KeySelector ‚Ä∫ Props Validation ‚Ä∫ should support custom key lists

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      546 |       );
      547 |       
    > 548 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      549 |       
      550 |       unmount();
      551 |       

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:548:50)

FAIL tests/components/feedback/ProgressIndicator.test.tsx
  ProgressIndicator
    Basic Rendering
      ‚úì renders linear progress bar by default (100 ms)
      ‚úì renders circular progress when variant is circular (92 ms)
      ‚úì displays progress text when provided (9 ms)
      ‚úì shows percentage when showPercentage is true (83 ms)
    Progress Validation
      ‚úì clamps progress values to 0-100 range (18 ms)
      ‚úï handles NaN progress values (9 ms)
      ‚úï handles undefined progress values (87 ms)
    Styling and Variants
      ‚úì applies correct size classes (11 ms)
      ‚úì applies custom className (6 ms)
      ‚úï applies different color schemes (78 ms)
    Accessibility
      ‚úì has proper accessibility attributes (8 ms)
      ‚úì handles progress without text (7 ms)
      ‚úì provides proper ARIA labels for different states (83 ms)
    Event Integration
      ‚úï should publish progress events when progress changes (13 ms)
      ‚úï should publish completion events when progress reaches 100 (3 ms)
      ‚úï should subscribe to progress events on mount (2 ms)
      ‚úï should unsubscribe from events on unmount (76 ms)
    Animation and Transitions
      ‚úï should animate progress changes smoothly (13 ms)
      ‚úì should respect reduced motion preferences (5 ms)
    Performance
      ‚úì should handle rapid progress updates efficiently (107 ms)
      ‚úï should debounce progress events (88 ms)
    Error Handling
      ‚úï should handle invalid progress values gracefully (5 ms)
      ‚úï should recover from event manager errors (79 ms)

  ‚óè ProgressIndicator ‚Ä∫ Progress Validation ‚Ä∫ handles NaN progress values

    expect(element).toHaveAttribute("aria-valuenow", "0") // element.getAttribute("aria-valuenow") === "0"

    Expected the element to have attribute:
      aria-valuenow="0"
    Received:
      aria-valuenow="NaN"

      114 |
      115 |       const progressBar = screen.getByRole('progressbar');
    > 116 |       expect(progressBar).toHaveAttribute('aria-valuenow', '0');
          |                           ^
      117 |     });
      118 |
      119 |     it('handles undefined progress values', () => {

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:116:27)

  ‚óè ProgressIndicator ‚Ä∫ Progress Validation ‚Ä∫ handles undefined progress values

    expect(element).toHaveAttribute("aria-valuenow", "0") // element.getAttribute("aria-valuenow") === "0"

    Expected the element to have attribute:
      aria-valuenow="0"
    Received:
      aria-valuenow="NaN"

      123 |
      124 |       const progressBar = screen.getByRole('progressbar');
    > 125 |       expect(progressBar).toHaveAttribute('aria-valuenow', '0');
          |                           ^
      126 |     });
      127 |   });
      128 |

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:125:27)

  ‚óè ProgressIndicator ‚Ä∫ Styling and Variants ‚Ä∫ applies different color schemes

    expect(element).toHaveClass("bg-green-500")

    Expected the element to have class:
      bg-green-500
    Received:
      h-full rounded-full bg-green-600

      154 |
      155 |       let progressBar = screen.getByRole('progressbar');
    > 156 |       expect(progressBar).toHaveClass('bg-green-500');
          |                           ^
      157 |
      158 |       // Using 'orange' as it's an allowed color and maps to bg-orange-500
      159 |       rerender(<ProgressIndicator progress={50} color="orange" />);

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:156:27)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should publish progress events when progress changes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"progress": 50}, "type": "ProgressUpdated"}

    Number of calls: 0

      214 |       rerender(<ProgressIndicator progress={50} />);
      215 |
    > 216 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      217 |         expect.objectContaining({
      218 |           type: 'ProgressUpdated',
      219 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:216:40)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should publish completion events when progress reaches 100

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"type": "ProgressCompleted"}

    Number of calls: 0

      227 |       render(<ProgressIndicator progress={100} />);
      228 |
    > 229 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      230 |         expect.objectContaining({
      231 |           type: 'ProgressCompleted'
      232 |         })

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:229:40)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should subscribe to progress events on mount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      238 |
      239 |       // Expect subscribe to have been called at least once
    > 240 |       expect(mockEventManager.subscribe).toHaveBeenCalled();
          |                                          ^
      241 |     });
      242 |
      243 |     it('should unsubscribe from events on unmount', () => {

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:240:42)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should unsubscribe from events on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      247 |
      248 |       // Expect unsubscribe to have been called at least once
    > 249 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      250 |     });
      251 |   });
      252 |

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:249:44)

  ‚óè ProgressIndicator ‚Ä∫ Animation and Transitions ‚Ä∫ should animate progress changes smoothly

    expect(element).toHaveClass("transition-all")

    Expected the element to have class:
      transition-all
    Received:
      h-full rounded-full bg-blue-600

      256 |
      257 |       const progressBar = screen.getByRole('progressbar');
    > 258 |       expect(progressBar).toHaveClass('transition-all'); // Check for the transition class
          |                           ^
      259 |
      260 |       rerender(<ProgressIndicator progress={75} animated={true} />);
      261 |

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:258:27)

  ‚óè ProgressIndicator ‚Ä∫ Performance ‚Ä∫ should debounce progress events

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      338 |
      339 |       // After advancing timers, only one event should have been published with the last value
    > 340 |       expect(mockEventManager.publish).toHaveBeenCalledTimes(1);
          |                                        ^
      341 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
      342 |         expect.objectContaining({
      343 |           type: 'ProgressUpdated',

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:340:40)

  ‚óè ProgressIndicator ‚Ä∫ Error Handling ‚Ä∫ should handle invalid progress values gracefully

    expect(element).toHaveAttribute("aria-valuenow", "0") // element.getAttribute("aria-valuenow") === "0"

    Expected the element to have attribute:
      aria-valuenow="0"
    Received:
      aria-valuenow="NaN"

      361 |       const progressBar = screen.getByRole('progressbar');
      362 |       // Invalid values should default to 0
    > 363 |       expect(progressBar).toHaveAttribute('aria-valuenow', '0');
          |                           ^
      364 |
      365 |       // Optionally, assert that an error was logged if the component is designed to do so
      366 |       // expect(consoleSpy).toHaveBeenCalledWith(expect.stringContaining('Invalid progress value'));

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:363:27)

  ‚óè ProgressIndicator ‚Ä∫ Error Handling ‚Ä∫ should recover from event manager errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      385 |
      386 |       // Verify that the publish method was still attempted
    > 387 |       expect(mockEventManager.publish).toHaveBeenCalled();
          |                                        ^
      388 |     });
      389 |   });
      390 | });

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:387:40)

FAIL tests/components/editor/InputEditor.test.tsx
  ‚óè Test suite failed to run

    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m105[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m105[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m105[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m105[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m116[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m116[0m           <InputEditor value=\"\" onChange={mockOnChange} placeholder={customPlaceholder} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m116[0m:[93m92[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m116[0m           <InputEditor value=\"\" onChange={mockOnChange} placeholder={customPlaceholder} />
    [7m   [0m [91m                                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m137[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m137[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m137[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m137[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m149[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m149[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m149[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m149[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m162[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m162[0m           <InputEditor value=\"\" onChange={mockOnChange} disabled={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m162[0m:[93m76[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m162[0m           <InputEditor value=\"\" onChange={mockOnChange} disabled={true} />
    [7m   [0m [91m                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m173[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m173[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m173[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m173[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m190[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m190[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m190[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m190[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m205[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m205[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m205[0m:[93m84[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m205[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                                                                                   ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m220[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m220[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m220[0m:[93m82[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m220[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                                                                                 ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m235[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m235[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m235[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m235[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m257[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m257[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m257[0m:[93m76[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m257[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m284[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m284[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m284[0m:[93m87[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m284[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                                                                                      ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m301[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m301[0m           <InputEditor value=\"\" onChange={mockOnChange} highlightInvalidChords={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m301[0m:[93m90[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m301[0m           <InputEditor value=\"\" onChange={mockOnChange} highlightInvalidChords={true} />
    [7m   [0m [91m                                                                                         ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m318[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m318[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m318[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m318[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m331[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m331[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m331[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m331[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m348[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m348[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m348[0m:[93m87[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m348[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                                                                                      ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m371[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m371[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m371[0m:[93m84[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m371[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                                                                                   ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m392[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m392[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m392[0m:[93m82[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m392[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                                                                                 ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m413[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m413[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m413[0m:[93m76[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m413[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m437[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m437[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m437[0m:[93m84[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m437[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                                                                                   ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m463[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m463[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m463[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m463[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m

FAIL src/tests/performance/benchmarks.test.ts
  ‚óè Performance Benchmarks ‚Ä∫ Chord Factory Performance ‚Ä∫ should create chords efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Chord Factory Performance ‚Ä∫ should handle complex chord creation efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Chord Factory Performance ‚Ä∫ should validate chords efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Key Transposition Performance ‚Ä∫ should transpose chords efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Key Transposition Performance ‚Ä∫ should calculate key distances efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Key Transposition Performance ‚Ä∫ should handle batch transposition efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Event System Performance ‚Ä∫ should handle high-frequency event publishing

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Event System Performance ‚Ä∫ should handle multiple subscribers efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Memory Usage Benchmarks ‚Ä∫ should not leak memory during chord creation

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Memory Usage Benchmarks ‚Ä∫ should handle event subscription/unsubscription without leaks

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Scalability Benchmarks ‚Ä∫ should scale linearly with chord complexity

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Scalability Benchmarks ‚Ä∫ should handle increasing numbers of event subscribers efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Comparison with Legacy Implementation ‚Ä∫ should demonstrate performance improvements

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Stress Testing ‚Ä∫ should handle extreme loads without crashing

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)


  ‚óè Test suite failed to run

    TypeError: Cannot read properties of undefined (reading 'dispose')

      33 |
      34 |   afterAll(() => {
    > 35 |     container.dispose();
         |               ^
      36 |   });
      37 |
      38 |   describe('Chord Factory Performance', () => {

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:35:15)

PASS src/tests/unit/transposition/key-transposer.test.ts
  KeyTransposer
    transposeNote
      ‚úì should transpose notes correctly with positive semitones (22 ms)
      ‚úì should transpose notes correctly with negative semitones (1 ms)
      ‚úì should handle octave wrapping
      ‚úì should prefer flats when target key uses flats
      ‚úì should prefer sharps when target key uses sharps (1 ms)
      ‚úì should throw error for invalid note (179 ms)
    transposeChord
      ‚úì should transpose chord root (1 ms)
      ‚úì should transpose chord with bass note
      ‚úì should preserve chord quality and extensions (1 ms)
      ‚úì should preserve Nashville number
    getKeyDistance
      ‚úì should calculate correct distances for major keys (1 ms)
      ‚úì should calculate correct distances for minor keys (1 ms)
      ‚úì should handle mixed major/minor keys
      ‚úì should return 0 for same key
      ‚úì should throw error for invalid keys (1 ms)
    transposeChords
      ‚úì should transpose multiple chords (1 ms)
      ‚úì should return empty array for empty input
    transposeToKey
      ‚úì should transpose chords from one key to another (1 ms)
    getRelativeKey
      ‚úì should get relative minor from major key
      ‚úì should get relative major from minor key
      ‚úì should handle sharp and flat keys
    getParallelKey
      ‚úì should get parallel minor from major key (1 ms)
      ‚úì should get parallel major from minor key
    areKeysEnharmonic
      ‚úì should identify enharmonic major keys
      ‚úì should identify enharmonic minor keys
      ‚úì should return false for non-enharmonic keys (1 ms)
      ‚úì should return false for different modes (1 ms)
    getKeySignature
      ‚úì should return correct key signatures for major keys (1 ms)
      ‚úì should return correct key signatures for minor keys (1 ms)
    getScaleDegrees
      ‚úì should return correct scale degrees for major keys
      ‚úì should return correct scale degrees for minor keys (2 ms)
      ‚úì should prefer flats for flat keys
    getChordFunction
      ‚úì should return correct Roman numerals for major key
      ‚úì should return correct Roman numerals for minor key (1 ms)
      ‚úì should return N/A for chords not in key (74 ms)
    suggestBestEnharmonicSpelling
      ‚úì should prefer keys with fewer accidentals (1 ms)
      ‚úì should return original key when no better option exists
    getCommonProgressions
      ‚úì should return common progressions for major keys
      ‚úì should return common progressions for minor keys (1 ms)
    error handling
      ‚úì should handle invalid chord roots gracefully (1 ms)
      ‚úì should handle invalid keys in getKeyDistance (1 ms)

FAIL src/tests/unit/events/event-manager.test.ts
  EventManager
    subscribe and publish
      ‚úï should subscribe and receive events (1 ms)
      ‚úï should handle multiple subscribers for same event
      ‚úï should handle multiple events for same subscriber
      ‚úï should not call handlers for different event types (1 ms)
    unsubscribe
      ‚úï should unsubscribe handlers (1 ms)
      ‚úï should only unsubscribe specific handler
      ‚úì should handle unsubscribing non-existent handler gracefully (2 ms)
    clear
      ‚úï should clear all event handlers
    getHandlerCount
      ‚úì should return correct handler count (1 ms)
    getRegisteredEventTypes
      ‚úì should return registered event types (1 ms)
    hasHandlers
      ‚úì should return true when handlers exist
    subscribeToMultiple
      ‚úï should subscribe to multiple event types (1 ms)
    unsubscribeFromMultiple
      ‚úï should unsubscribe from multiple event types (1 ms)
    subscribeOnce
      ‚úï should unsubscribe after first event (1 ms)
    async handlers
      ‚úï should handle async event handlers (1 ms)
      ‚úï should handle async handler errors gracefully
    error handling
      ‚úï should handle synchronous handler errors gracefully (1 ms)
      ‚úï should continue processing other handlers after error (1 ms)
    dispose
      ‚úì should dispose and prevent further operations (79 ms)
      ‚úì should clear all handlers on dispose
    domain events
      ConversionStartedEvent
        ‚úì should create conversion started event with correct properties (105 ms)
      ConversionCompletedEvent
        ‚úì should create conversion completed event with correct properties
      ConversionErrorEvent
        ‚úì should create conversion error event with correct properties
        ‚úì should default recoveryAttempted to false (1 ms)
    handler modification during event processing
      ‚úï should handle handlers being removed during event processing
      ‚úï should handle handlers being added during event processing

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should subscribe and receive events

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:42:20)

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should handle multiple subscribers for same event

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:59:20)

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should handle multiple events for same subscriber

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:70:20)

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should not call handlers for different event types

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:80:20)

  ‚óè EventManager ‚Ä∫ unsubscribe ‚Ä∫ should unsubscribe handlers

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:93:20)

  ‚óè EventManager ‚Ä∫ unsubscribe ‚Ä∫ should only unsubscribe specific handler

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:107:20)

  ‚óè EventManager ‚Ä∫ clear ‚Ä∫ should clear all event handlers

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:132:20)

  ‚óè EventManager ‚Ä∫ subscribeToMultiple ‚Ä∫ should subscribe to multiple event types

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:188:20)

  ‚óè EventManager ‚Ä∫ unsubscribeFromMultiple ‚Ä∫ should unsubscribe from multiple event types

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:202:20)

  ‚óè EventManager ‚Ä∫ subscribeOnce ‚Ä∫ should unsubscribe after first event

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:215:20)

  ‚óè EventManager ‚Ä∫ async handlers ‚Ä∫ should handle async event handlers

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:230:20)

  ‚óè EventManager ‚Ä∫ async handlers ‚Ä∫ should handle async handler errors gracefully

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:243:20)

  ‚óè EventManager ‚Ä∫ error handling ‚Ä∫ should handle synchronous handler errors gracefully

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:265:20)

  ‚óè EventManager ‚Ä∫ error handling ‚Ä∫ should continue processing other handlers after error

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:285:20)

  ‚óè EventManager ‚Ä∫ handler modification during event processing ‚Ä∫ should handle handlers being removed during event processing

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:382:20)

  ‚óè EventManager ‚Ä∫ handler modification during event processing ‚Ä∫ should handle handlers being added during event processing

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:400:20)

FAIL tests/components/controls/FormatSelector.test.tsx
  FormatSelector
    Basic Rendering
      ‚úì renders with correct label (91 ms)
      ‚úì displays all format options (12 ms)
      ‚úì shows the selected value (9 ms)
    Format Selection
      ‚úì calls onChange when selection changes (85 ms)
      ‚úì is disabled when disabled prop is true (92 ms)
      ‚úì updates display when format changes (9 ms)
    SOLID Architecture Integration
      ‚úï should get supported formats from conversion engine (3 ms)
      ‚úï should publish format change events (83 ms)
      ‚úì should handle input validation through conversion engine (6 ms)
    Accessibility
      ‚úì has correct styling classes (6 ms)
      ‚úï should have proper ARIA attributes (7 ms)
      ‚úì should support keyboard navigation (105 ms)
    Error Handling
      ‚úì should handle missing conversion engine gracefully (3 ms)
      ‚úì should handle format loading errors (2 ms)
      ‚úï should handle invalid format values (73 ms)
    Performance
      ‚úï should cleanup event subscriptions on unmount (3 ms)
      ‚úì should not re-fetch formats on every render (8 ms)
    Props Validation
      ‚úì should handle all supported NotationFormat values (186 ms)
      ‚úì should handle optional props correctly (6 ms)

  ‚óè FormatSelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should get supported formats from conversion engine

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      201 |       );
      202 |       
    > 203 |       expect(mockConversionEngine.getSupportedFormats).toHaveBeenCalled();
          |                                                        ^
      204 |     });
      205 |
      206 |     it('should publish format change events', async () => {

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:203:56)

  ‚óè FormatSelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should publish format change events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"newFormat": "onsong", "oldFormat": "chordpro"}, "type": "FormatChanged"}

    Number of calls: 0

      218 |       fireEvent.change(select, { target: { value: NotationFormat.ONSONG } });
      219 |       
    > 220 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      221 |         expect.objectContaining({
      222 |           type: 'FormatChanged',
      223 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:220:40)

  ‚óè FormatSelector ‚Ä∫ Accessibility ‚Ä∫ should have proper ARIA attributes

    expect(element).toHaveAttribute("aria-label", Any<String>) // element.getAttribute("aria-label") === Any<String>

    Expected the element to have attribute:
      aria-label=Any<String>
    Received:
      null

      282 |       
      283 |       const select = screen.getByRole('combobox');
    > 284 |       expect(select).toHaveAttribute('aria-label', expect.any(String));
          |                      ^
      285 |     });
      286 |
      287 |     it('should support keyboard navigation', async () => {

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:284:22)

  ‚óè FormatSelector ‚Ä∫ Error Handling ‚Ä∫ should handle invalid format values

    expect(element).toHaveValue(INVALID_FORMAT)

    Expected the element to have value:
      INVALID_FORMAT
    Received:
      nashville

      377 |       
      378 |       // Component should still render without crashing
    > 379 |       expect(select).toHaveValue('INVALID_FORMAT');
          |                      ^
      380 |     });
      381 |   });
      382 |

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:379:22)

  ‚óè FormatSelector ‚Ä∫ Performance ‚Ä∫ should cleanup event subscriptions on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      395 |       unmount();
      396 |       
    > 397 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      398 |     });
      399 |
      400 |     it('should not re-fetch formats on every render', () => {

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:397:44)

FAIL tests/services/conversion/enhanced-conversion-engine.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/conversion-engine-old/conversion-engine' from 'tests/services/conversion/enhanced-conversion-engine.test.ts'

    > 1 | import { ConversionEngine } from '../../../../src/services/conversion-engine-old/conversion-engine';
        | ^
      2 | import { ConversionOptions } from '../conversion-engine-old/types/ConversionOptions';
      3 | import { ConversionProgress } from '../conversion-engine-old/types/ConversionProgress';
      4 | import { PerformanceMetrics } from '../conversion-engine-old/types/PerformanceMetrics';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/enhanced-conversion-engine.test.ts:1:1)

FAIL src/constants/__tests__/chord-mappings.test.ts
  Chord Mappings Constants
    CHROMATIC_NOTES
      ‚úì should have 12 notes (2 ms)
      ‚úì should start with C (1 ms)
      ‚úì should contain all expected notes (1 ms)
      ‚úì should contain flat equivalents
    MAJOR_KEY_SIGNATURES
      ‚úì should contain all 15 major keys (63 ms)
      ‚úì should have C major with no sharps or flats
      ‚úì should have G major with F#
      ‚úì should have F major with Bb
      ‚úì should have all keys with 7 notes each (2 ms)
      ‚úì should include sharp keys (2 ms)
      ‚úì should include flat keys (2 ms)
    MINOR_KEY_SIGNATURES
      ‚úì should contain all 15 minor keys (1 ms)
      ‚úì should have A minor with no sharps or flats (1 ms)
      ‚úì should have E minor with F#
      ‚úì should have D minor with Bb (1 ms)
      ‚úì should have all keys with 7 notes each (1 ms)
      ‚úì should include sharp minor keys (1 ms)
      ‚úì should include flat minor keys
    NASHVILLE_MAJOR_MAPPINGS
      ‚úì should have mappings for all major keys (8 ms)
      ‚úì should map C major correctly (1 ms)
      ‚úì should map G major correctly (5 ms)
      ‚úï should have 7 mappings for each key (1 ms)
    NASHVILLE_MINOR_MAPPINGS
      ‚úì should have mappings for all minor keys (2 ms)
      ‚úì should map A minor correctly (1 ms)
      ‚úï should have 7 mappings for each key (1 ms)
    CHORD_QUALITIES
      ‚úì should map basic chord qualities (1 ms)
      ‚úì should map minor chord qualities (1 ms)
      ‚úì should map diminished and augmented qualities
      ‚úì should map suspended chord qualities (1 ms)
    CHORD_EXTENSIONS
      ‚úì should contain basic seventh chords
      ‚úì should contain ninth chords (1 ms)
      ‚úì should contain eleventh and thirteenth chords
      ‚úì should contain add chords (1 ms)
      ‚úì should contain sixth chords
      ‚úì should contain suspended variations
      ‚úì should contain altered extensions (1 ms)
      ‚úì should contain complex extensions (1 ms)
    ENHARMONIC_EQUIVALENTS
      ‚úì should map sharp to flat equivalents (1 ms)
      ‚úì should map flat to sharp equivalents
      ‚úì should map edge case enharmonics (1 ms)
      ‚úì should have bidirectional mappings (1 ms)
    Data integrity
      ‚úì should have consistent major and minor key counts (1 ms)
      ‚úï should have all Nashville mappings initialized (1 ms)
      ‚úì should have no duplicate chord extensions
      ‚úì should have valid enharmonic pairs (76 ms)

  ‚óè Chord Mappings Constants ‚Ä∫ NASHVILLE_MAJOR_MAPPINGS ‚Ä∫ should have 7 mappings for each key

    expect(received).toHaveLength(expected)

    Expected length: 7
    Received length: 12
    Received array:  ["C", "D", "E", "F", "G", "A", "B", "C#", "D#", "F#", ‚Ä¶]

      158 |     it('should have 7 mappings for each key', () => {
      159 |       Object.values(NASHVILLE_MAJOR_MAPPINGS).forEach(mapping => {
    > 160 |         expect(Object.keys(mapping)).toHaveLength(7);
          |                                      ^
      161 |       });
      162 |     });
      163 |   });

      at src/constants/__tests__/chord-mappings.test.ts:160:38
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/constants/__tests__/chord-mappings.test.ts:159:47)

  ‚óè Chord Mappings Constants ‚Ä∫ NASHVILLE_MINOR_MAPPINGS ‚Ä∫ should have 7 mappings for each key

    expect(received).toHaveLength(expected)

    Expected length: 7
    Received length: 12
    Received array:  ["A", "B", "C", "D", "E", "F", "G", "C#", "D#", "F#", ‚Ä¶]

      184 |     it('should have 7 mappings for each key', () => {
      185 |       Object.values(NASHVILLE_MINOR_MAPPINGS).forEach(mapping => {
    > 186 |         expect(Object.keys(mapping)).toHaveLength(7);
          |                                      ^
      187 |       });
      188 |     });
      189 |   });

      at src/constants/__tests__/chord-mappings.test.ts:186:38
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/constants/__tests__/chord-mappings.test.ts:185:47)

  ‚óè Chord Mappings Constants ‚Ä∫ Data integrity ‚Ä∫ should have all Nashville mappings initialized

    expect(received).toHaveLength(expected)

    Expected length: 7
    Received length: 12
    Received array:  ["C", "D", "E", "F", "G", "A", "B", "C#", "D#", "F#", ‚Ä¶]

      325 |       Object.keys(MAJOR_KEY_SIGNATURES).forEach(key => {
      326 |         expect(NASHVILLE_MAJOR_MAPPINGS[key]).toBeDefined();
    > 327 |         expect(Object.keys(NASHVILLE_MAJOR_MAPPINGS[key])).toHaveLength(7);
          |                                                            ^
      328 |       });
      329 |
      330 |       Object.keys(MINOR_KEY_SIGNATURES).forEach(key => {

      at src/constants/__tests__/chord-mappings.test.ts:327:60
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/constants/__tests__/chord-mappings.test.ts:325:41)

FAIL src/tests/integration/conversion-workflow.test.ts
  Conversion Workflow Integration
    Dependency Injection Integration
      ‚úï should resolve all core services (1 ms)
      ‚úï should maintain singleton behavior for registered singletons (1 ms)
      ‚úï should inject dependencies correctly (1 ms)
    Chord Factory and Builder Integration
      ‚úï should create chords using factory and builder patterns (1 ms)
      ‚úï should validate chords through integrated validation
    Key Transposition Integration
      ‚úï should transpose chords with command pattern support
      ‚úï should calculate key distances correctly
      ‚úï should provide key relationship analysis
    Event System Integration
      ‚úï should publish and handle events correctly
      ‚úï should handle multiple subscribers and event types (1 ms)
    Storage System Integration
      ‚úï should save and load conversion results (1 ms)
      ‚úï should handle storage statistics
    Format Detection Integration
      ‚úï should detect formats with confidence scoring
      ‚úï should handle multiple format detection
    Error Recovery Integration
      ‚úï should handle parsing errors gracefully
    Complete Workflow Integration
      ‚úï should handle a complete chord processing workflow
      ‚úï should handle event-driven workflow
      ‚úï should integrate storage with conversion results
    Performance and Scalability
      ‚úï should handle multiple concurrent operations (1 ms)
      ‚úï should handle large numbers of events efficiently (1 ms)
    Memory Management
      ‚úï should properly dispose of resources

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should resolve all core services

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should resolve all core services

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should maintain singleton behavior for registered singletons

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should maintain singleton behavior for registered singletons

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should inject dependencies correctly

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should inject dependencies correctly

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should create chords using factory and builder patterns

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should create chords using factory and builder patterns

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should validate chords through integrated validation

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should validate chords through integrated validation

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should transpose chords with command pattern support

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should transpose chords with command pattern support

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should calculate key distances correctly

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should calculate key distances correctly

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should provide key relationship analysis

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should provide key relationship analysis

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should publish and handle events correctly

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should publish and handle events correctly

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should handle multiple subscribers and event types

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should handle multiple subscribers and event types

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should save and load conversion results

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should save and load conversion results

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should handle storage statistics

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should handle storage statistics

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should detect formats with confidence scoring

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should detect formats with confidence scoring

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should handle multiple format detection

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should handle multiple format detection

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Error Recovery Integration ‚Ä∫ should handle parsing errors gracefully

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Error Recovery Integration ‚Ä∫ should handle parsing errors gracefully

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle a complete chord processing workflow

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle a complete chord processing workflow

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle event-driven workflow

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle event-driven workflow

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should integrate storage with conversion results

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should integrate storage with conversion results

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle multiple concurrent operations

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle multiple concurrent operations

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle large numbers of events efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle large numbers of events efficiently

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Memory Management ‚Ä∫ should properly dispose of resources

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Memory Management ‚Ä∫ should properly dispose of resources

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

FAIL src/tests/unit/chord/chord-builder.test.ts
  ChordBuilder
    fluent interface
      ‚úì should return builder instance for method chaining (74 ms)
      ‚úì should build chord with all properties (3 ms)
    setRoot
      ‚úì should set valid chord root
      ‚úì should throw error for invalid chord root (108 ms)
    setQuality
      ‚úì should set chord quality (1 ms)
    extensions
      ‚úì should set extensions array (1 ms)
      ‚úì should add single extension (1 ms)
      ‚úì should add extension by value (1 ms)
      ‚úì should add multiple extensions (1 ms)
    setBassNote
      ‚úì should set valid bass note (1 ms)
      ‚úì should clear bass note when undefined
      ‚úì should throw error for invalid bass note (1 ms)
    setPosition
      ‚úì should set valid position
      ‚úì should throw error for negative position (1 ms)
    setOriginalNotation
      ‚úì should set original notation
    setNashvilleNumber
      ‚úì should set Nashville number (1 ms)
      ‚úì should clear Nashville number when undefined
    build
      ‚úì should throw error when root is not set
      ‚úì should generate default notation when not provided (73 ms)
      ‚úì should validate extensions during build (1 ms)
    reset
      ‚úì should reset builder to initial state (1 ms)
      ‚úì should return builder instance for chaining
    clone
      ‚úì should create independent copy of builder (1 ms)
    setProperties
      ‚úì should set multiple properties at once (1 ms)
      ‚úì should skip undefined properties (1 ms)
    convenience methods
      ‚úì should build major chord
      ‚úì should build major chord with custom notation (1 ms)
      ‚úì should build minor chord
      ‚úï should build dominant 7th chord (1 ms)
      ‚úì should build major 7th chord (1 ms)
      ‚úì should build minor 7th chord
      ‚úì should build suspended chord with default sus4 (1 ms)
      ‚úì should build suspended chord with sus2 (1 ms)
    error handling
      ‚úì should handle invalid root in convenience methods
      ‚úì should validate bass note during build (1 ms)
    immutability
      ‚úì should not modify original extensions array
      ‚úì should create independent extension arrays for each build (1 ms)

  ‚óè ChordBuilder ‚Ä∫ convenience methods ‚Ä∫ should build dominant 7th chord

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      351 |       expect(chord.root).toBe('G');
      352 |       expect(chord.quality).toBe(ChordQuality.DOMINANT);
    > 353 |       expect(chord.extensions).toHaveLength(1);
          |                                ^
      354 |       expect(chord.extensions[0].value).toBe('7');
      355 |       expect(chord.originalNotation).toBe('G7');
      356 |     });

      at Object.<anonymous> (src/tests/unit/chord/chord-builder.test.ts:353:32)

‚ñ∂ Chord Types
  ‚ñ∂ ChordPlacement interface
    ‚úñ should create a valid ChordPlacement (1.137721ms)
    ‚úñ should create ChordPlacement without optional placement (0.225489ms)
    ‚úñ should accept all valid placement values (0.177829ms)
  ‚úñ ChordPlacement interface (2.602621ms)
  ‚ñ∂ Chord interface
    ‚úñ should create a valid Chord (0.42911ms)
    ‚úñ should create Chord without optional fields (0.21918ms)
    ‚úñ should accept all chord qualities (2.27926ms)
  ‚úñ Chord interface (3.91239ms)
  ‚ñ∂ ChordExtension interface
    ‚úñ should create valid ChordExtension (0.924741ms)
    ‚úñ should accept all extension types (70.371192ms)
  ‚úñ ChordExtension interface (71.793713ms)
  ‚ñ∂ Validation Functions
    ‚ñ∂ validateChordPlacement
      ‚úñ should validate a valid ChordPlacement (0.66385ms)
      ‚úñ should validate ChordPlacement without optional placement (0.29623ms)
      ‚úñ should reject null or undefined (0.19234ms)
      ‚úñ should reject non-object values (0.21417ms)
      ‚úñ should reject missing required fields (0.17389ms)
      ‚úñ should reject invalid startIndex/endIndex (0.15483ms)
      ‚úñ should reject negative startIndex (0.14733ms)
      ‚úñ should reject invalid placement value (0.18254ms)
    ‚úñ validateChordPlacement (2.4841ms)
    ‚ñ∂ validateChord
      ‚úñ should validate a valid Chord (0.37005ms)
      ‚úñ should validate Chord without optional fields (0.176609ms)
      ‚úñ should reject null or undefined (0.15342ms)
      ‚úñ should reject invalid quality (0.1825ms)
      ‚úñ should reject invalid extensions array (0.28774ms)
    ‚úñ validateChord (1.400221ms)
    ‚ñ∂ validateChordExtension
      ‚úñ should validate a valid ChordExtension (0.23844ms)
      ‚úñ should reject null or undefined (0.15096ms)
      ‚úñ should reject invalid type (0.15447ms)
      ‚úñ should reject missing required fields (0.16802ms)
    ‚úñ validateChordExtension (0.95ms)
  ‚úñ Validation Functions (6.072211ms)
  ‚ñ∂ ChordQuality enum
    ‚úñ should have all expected values (0.23892ms)
    ‚úñ should contain exactly 6 values (0.15404ms)
  ‚úñ ChordQuality enum (0.51262ms)
  ‚ñ∂ Legacy Annotation interface
    ‚úñ should accept valid annotation objects (0.22405ms)
    ‚úñ should accept all valid position values (0.17202ms)
  ‚úñ Legacy Annotation interface (0.51198ms)
‚úñ Chord Types (87.004185ms)
FAIL tests/types/chord.test.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/types/line.test.ts
  Line Types
    TextLine
      ‚úì should create a valid TextLine (4 ms)
      ‚úì should create TextLine without optional lineNumber (2 ms)
      ‚úì should create TextLine with multiple chords (1 ms)
    EmptyLine
      ‚úì should create a valid EmptyLine with default count (3 ms)
      ‚úì should create EmptyLine with specific count (2 ms)
      ‚úì should create EmptyLine with count but no lineNumber (1 ms)
    AnnotationLine
      ‚úì should create a valid AnnotationLine with comment type (1 ms)
      ‚úì should create AnnotationLine with instruction type
      ‚úì should create AnnotationLine with tempo type (1 ms)
      ‚úì should create AnnotationLine with dynamics type
    Type Guards
      isTextLine
        ‚úì should return true for TextLine (1 ms)
        ‚úì should return false for EmptyLine (1 ms)
        ‚úì should return false for AnnotationLine (1 ms)
      isEmptyLine
        ‚úì should return true for EmptyLine
        ‚úì should return false for TextLine
        ‚úì should return false for AnnotationLine (1 ms)
      isAnnotationLine
        ‚úì should return true for AnnotationLine
        ‚úì should return false for TextLine
        ‚úì should return false for EmptyLine (1 ms)
    Line Validation
      validateLine
        ‚úì should validate a valid TextLine
        ‚úì should validate a valid EmptyLine
        ‚úì should validate a valid AnnotationLine
        ‚úï should reject null or undefined (1 ms)
        ‚úï should reject non-object values (1 ms)
        ‚úï should reject invalid type (1 ms)
        ‚úï should reject TextLine with missing text (1 ms)
        ‚úï should reject TextLine with non-array chords (1 ms)
        ‚úï should reject EmptyLine with invalid count (1 ms)
        ‚úï should reject AnnotationLine with missing value
        ‚úï should reject AnnotationLine with invalid annotationType
        ‚úï should reject lines with invalid lineNumber (2 ms)
    Discriminated Union
      ‚úì should work with discriminated union type (1 ms)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject null or undefined

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      264 |
      265 |             it('should reject null or undefined', () => {
    > 266 |                 expect(validateLine(null)).toBe(false);
          |                                            ^
      267 |                 expect(validateLine(undefined)).toBe(false);
      268 |             });
      269 |

      at Object.<anonymous> (tests/types/line.test.ts:266:44)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject non-object values

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      269 |
      270 |             it('should reject non-object values', () => {
    > 271 |                 expect(validateLine('string')).toBe(false);
          |                                                ^
      272 |                 expect(validateLine(123)).toBe(false);
      273 |                 expect(validateLine([])).toBe(false);
      274 |             });

      at Object.<anonymous> (tests/types/line.test.ts:271:48)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject invalid type

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      280 |                 };
      281 |
    > 282 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      283 |             });
      284 |
      285 |             it('should reject TextLine with missing text', () => {

      at Object.<anonymous> (tests/types/line.test.ts:282:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject TextLine with missing text

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      289 |                 };
      290 |
    > 291 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      292 |             });
      293 |
      294 |             it('should reject TextLine with non-array chords', () => {

      at Object.<anonymous> (tests/types/line.test.ts:291:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject TextLine with non-array chords

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      299 |                 };
      300 |
    > 301 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      302 |             });
      303 |
      304 |             it('should reject EmptyLine with invalid count', () => {

      at Object.<anonymous> (tests/types/line.test.ts:301:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject EmptyLine with invalid count

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      308 |                 };
      309 |
    > 310 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      311 |             });
      312 |
      313 |             it('should reject AnnotationLine with missing value', () => {

      at Object.<anonymous> (tests/types/line.test.ts:310:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject AnnotationLine with missing value

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      317 |                 };
      318 |
    > 319 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      320 |             });
      321 |
      322 |             it('should reject AnnotationLine with invalid annotationType', () => {

      at Object.<anonymous> (tests/types/line.test.ts:319:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject AnnotationLine with invalid annotationType

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      327 |                 };
      328 |
    > 329 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      330 |             });
      331 |
      332 |             it('should reject lines with invalid lineNumber', () => {

      at Object.<anonymous> (tests/types/line.test.ts:329:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject lines with invalid lineNumber

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      338 |                 };
      339 |
    > 340 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      341 |             });
      342 |         });
      343 |     });

      at Object.<anonymous> (tests/types/line.test.ts:340:51)

FAIL tests/e2e/responsive-design.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Responsive Design Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/responsive-design.spec.ts:3:6)

FAIL tests/services/conversion/format-detector.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../format-detector' from 'tests/services/conversion/format-detector.test.ts'

    > 1 | import { FormatDetector } from '../format-detector';
        | ^
      2 | import { NotationFormat } from '../../../src/types';
      3 |
      4 | describe('FormatDetector', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/format-detector.test.ts:1:1)

PASS src/tests/unit/chord/chord-factory.test.ts
  ChordFactory
    createChord
      ‚úì should create chord from valid chord string (5 ms)
      ‚úì should throw error for invalid chord string (92 ms)
      ‚úì should throw error for empty chord string (3 ms)
      ‚úì should throw error for non-string input (79 ms)
      ‚úì should set position when provided (1 ms)
    createNashvilleChord
      ‚úì should create Nashville chord with valid number and quality (2 ms)
      ‚úì should throw error for invalid Nashville number (120 ms)
    createChordFromComponents
      ‚úì should create chord from valid components (75 ms)
      ‚úì should throw error for invalid components (2 ms)
    isValidChord
      ‚úì should return true for valid chord (1 ms)
      ‚úì should return false for invalid chord
      ‚úì should return false when validation fails (1 ms)
    createSimpleChord
      ‚úì should create simple major chord (1 ms)
      ‚úì should create simple minor chord (1 ms)
      ‚úì should throw error for invalid root (2 ms)
    createSlashChord
      ‚úì should create slash chord with valid notes (1 ms)
      ‚úì should create slash chord with different quality (1 ms)
      ‚úì should throw error for invalid root (1 ms)
      ‚úì should throw error for invalid bass note
    cloneChord
      ‚úì should clone chord without modifications
      ‚úì should clone chord with modifications
    builder methods
      ‚úì should create chord builder (1 ms)
      ‚úì should create Nashville chord builder (1 ms)
    error handling
      ‚úì should handle parser errors gracefully (3 ms)
      ‚úì should handle validator errors gracefully (1 ms)
    integration with real parser and validator
      ‚úì should create complex chords correctly (2 ms)
      ‚úì should validate and reject truly invalid chords (82 ms)

PASS src/tests/unit/dependency-injection/dependency-container.test.ts
  DependencyContainer
    register
      ‚úì should register transient services (4 ms)
      ‚úì should throw error when registering duplicate token (181 ms)
      ‚úì should create new instances for transient services (1 ms)
    registerSingleton
      ‚úì should register singleton services
      ‚úì should return same instance for singleton services (1 ms)
      ‚úì should throw error when registering duplicate singleton token (6 ms)
    resolve
      ‚úì should resolve registered services
      ‚úì should throw error for unregistered services (2 ms)
      ‚úì should handle dependency injection (63 ms)
    isRegistered
      ‚úì should return true for registered services (4 ms)
      ‚úì should return false for unregistered services (1 ms)
    unregister
      ‚úì should unregister services (2 ms)
      ‚úì should return false for unregistered services (1 ms)
    clear
      ‚úì should clear all registrations (1 ms)
    getRegisteredTokens
      ‚úì should return all registered tokens (14 ms)
      ‚úì should return empty array when no services registered (1 ms)
    registerValue
      ‚úì should register values directly (2 ms)
    registerClass
      ‚úì should register class constructors without dependencies (1 ms)
      ‚úì should register class constructors with dependencies
      ‚úì should register as singleton when specified (1 ms)
    createChild
      ‚úì should create child container with inherited registrations (1 ms)
      ‚úì should allow child to override parent registrations (68 ms)
    dispose
      ‚úì should dispose singleton instances with dispose method (1 ms)
      ‚úì should clear all registrations on dispose (1 ms)
      ‚úì should not throw when disposing services without dispose method (1 ms)
    error handling
      ‚úì should handle factory function errors (2 ms)
      ‚úì should handle circular dependencies gracefully (9 ms)
    complex scenarios
      ‚úì should handle multiple levels of dependencies (3 ms)
      ‚úì should maintain singleton behavior across complex dependency graphs (1 ms)

FAIL tests/components/editor/SectionRenderer.test.tsx
  SectionRenderer
    Basic Rendering
      ‚úì renders verse section with title (202 ms)
      ‚úì renders section without custom title using default title (9 ms)
      ‚úì applies correct styling for different section types (88 ms)
      ‚úì renders empty section with placeholder (2 ms)
    Mixed Line Types
      ‚úì renders section with mixed line types (7 ms)
    Section Types
      ‚úì does not show title for unknown section type without custom title (3 ms)
      ‚úì shows title for unknown section type with custom title (4 ms)
      ‚úì renders all section types with correct default titles (98 ms)
    Event Integration
      ‚úï should subscribe to section events on mount (2 ms)
      ‚úï should unsubscribe from events on unmount (2 ms)
    Accessibility
      ‚úì provides proper ARIA attributes for sections (3 ms)
      ‚úì provides proper heading structure (82 ms)
    Error Handling
      ‚úï handles invalid section data gracefully (103 ms)
      ‚úï handles missing line data gracefully (16 ms)
    Performance
      ‚úï handles large sections efficiently (181 ms)

  ‚óè SectionRenderer ‚Ä∫ Event Integration ‚Ä∫ should subscribe to section events on mount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      266 |       render(<SectionRenderer section={section} />);
      267 |       
    > 268 |       expect(mockEventManager.subscribe).toHaveBeenCalled();
          |                                          ^
      269 |     });
      270 |
      271 |     it('should unsubscribe from events on unmount', () => {

      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:268:42)

  ‚óè SectionRenderer ‚Ä∫ Event Integration ‚Ä∫ should unsubscribe from events on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      286 |       unmount();
      287 |       
    > 288 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      289 |     });
      290 |   });
      291 |

      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:288:44)

  ‚óè SectionRenderer ‚Ä∫ Error Handling ‚Ä∫ handles invalid section data gracefully

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'length')"

          93 |       
          94 |       <div className="section-content px-4 py-3 space-y-2">
        > 95 |         {section.lines.length === 0 ? (
             |                        ^
          96 |           <div className="text-gray-400 italic text-sm">
          97 |             (Empty section)
          98 |           </div>

      at SectionRenderer (src/components/editor/SectionRenderer.tsx:95:24)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at tests/components/editor/SectionRenderer.test.tsx:343:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:344:14)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:344:14)

  ‚óè SectionRenderer ‚Ä∫ Error Handling ‚Ä∫ handles missing line data gracefully

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'type')"

          170 |
          171 | export const isTextLine = (line: Line): line is TextLine => {
        > 172 |   return line.type === 'text';
              |               ^
          173 | };
          174 |
          175 | export const isEmptyLine = (line: Line): boolean => {

      at isTextLine (src/types/line.ts:172:15)
      at LineRenderer (src/components/editor/LineRenderer.tsx:209:17)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at tests/components/editor/SectionRenderer.test.tsx:364:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:365:14)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:365:14)

  ‚óè SectionRenderer ‚Ä∫ Performance ‚Ä∫ handles large sections efficiently

    expect(received).toBeLessThan(expected)

    Expected: < 100
    Received:   177.0423829999927

      391 |
      392 |       // Should render within reasonable time (less than 100ms)
    > 393 |       expect(endTime - startTime).toBeLessThan(100);
          |                                   ^
      394 |     });
      395 |   });
      396 | });

      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:393:35)

PASS src/tests/unit/value-objects/nashville-number.test.ts
  NashvilleNumber
    constructor
      ‚úì should create valid Nashville numbers (74 ms)
      ‚úì should reject invalid Nashville numbers (106 ms)
      ‚úì should reject non-integer values (1 ms)
    getValue
      ‚úì should return the numeric value (1 ms)
    toRomanNumeral
      ‚úì should convert to major Roman numerals (1 ms)
      ‚úì should convert to minor Roman numerals (1 ms)
    toString
      ‚úì should return string representation (1 ms)
    equals
      ‚úì should return true for equal Nashville numbers
      ‚úì should return false for different Nashville numbers (1 ms)
    scale degree functions
      ‚úì should identify tonic correctly (1 ms)
      ‚úì should identify subdominant correctly (2 ms)
      ‚úì should identify dominant correctly (1 ms)
    getScaleDegreeName
      ‚úì should return correct scale degree names (1 ms)
    harmonic functions
      getFunctionInMajor
        ‚úì should return correct functions in major key (1 ms)
      getFunctionInMinor
        ‚úì should return correct functions in minor key (1 ms)
    getIntervalTo
      ‚úì should calculate correct intervals
      ‚úì should handle wrap-around correctly (1 ms)
    transpose
      ‚úì should transpose correctly with positive intervals
      ‚úì should transpose correctly with negative intervals (1 ms)
      ‚úì should wrap around correctly
      ‚úì should handle negative wrap-around (68 ms)
    static methods
      fromRomanNumeral
        ‚úì should create from major Roman numerals (120 ms)
        ‚úì should create from minor Roman numerals (1 ms)
        ‚úì should throw error for invalid Roman numerals (2 ms)
      fromString
        ‚úì should create from valid string numbers (3 ms)
        ‚úì should throw error for invalid strings (72 ms)
      isValid
        ‚úì should return true for valid numbers (1 ms)
        ‚úì should return false for invalid numbers (1 ms)
      isValidString
        ‚úì should return true for valid string numbers (1 ms)
        ‚úì should return false for invalid strings (2 ms)
      getAllValidNumbers
        ‚úì should return all valid Nashville numbers (1 ms)
    chord quality helpers
      getTypicalQualityInMajor
        ‚úì should return correct qualities for major key (4 ms)
      getTypicalQualityInMinor
        ‚úì should return correct qualities for minor key (2 ms)

FAIL tests/services/diverse/__tests__/error-recovery.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/error-recovery/error-recovery' from 'tests/services/diverse/__tests__/error-recovery.test.ts'

      1 | import { describe, it, expect, beforeEach } from '@jest/globals';
    > 2 | import { ErrorRecoveryService } from '../../../../src/services/error-recovery/error-recovery';
        | ^
      3 | import { ConversionErrorFactory, ConversionErrorType } from '../../../../src/types/conversion-error';
      4 | import { TextLine, AnnotationLine } from '../../../../src/types/line';
      5 |

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/__tests__/error-recovery.test.ts:2:1)

‚ñ∂ SongbookRenderer
  ‚ñ∂ format property
    ‚úî should have correct format (2.7784ms)
  ‚úî format property (3.15724ms)
  ‚ñ∂ getDefaultWhitespaceRules
    ‚úî should return Songbook-specific whitespace rules (3.725391ms)
  ‚úî getDefaultWhitespaceRules (4.083071ms)
  ‚ñ∂ renderMetadata
    ‚úî should render Songbook-style metadata (1.742101ms)
    ‚úî should handle metadata with tempo and capo (0.756741ms)
  ‚úî renderMetadata (2.772881ms)
  ‚ñ∂ renderSectionTitle
    ‚úî should render verse section title (0.34618ms)
    ‚úî should render chorus section title (0.2445ms)
    ‚úî should render bridge section title (0.34693ms)
    ‚úî should render pre-chorus section title (0.44357ms)
    ‚úî should render other section types in uppercase (0.38113ms)
  ‚úî renderSectionTitle (2.16119ms)
  ‚ñ∂ canRender
    ‚úî should return true for chordsheet with chords (0.37339ms)
    ‚úî should return false for chordsheet without chords (0.56819ms)
    ‚úî should return false for invalid chordsheet (0.36487ms)
  ‚úî canRender (1.55191ms)
  ‚ñ∂ chord placement
    ‚úî should render chords above text by default (0.7276ms)
    ‚úî should handle complex chord positioning (0.84769ms)
  ‚úî chord placement (77.643736ms)
  ‚ñ∂ annotation handling
    ‚úî should render comments with three empty lines after (0.39524ms)
  ‚úî annotation handling (0.50154ms)
  ‚ñ∂ section spacing
    ‚úî should use correct spacing between sections (0.55096ms)
  ‚úî section spacing (0.65153ms)
  ‚ñ∂ full rendering
    ‚úî should render complete Songbook document (0.83354ms)
  ‚úî full rendering (0.93392ms)
‚úî SongbookRenderer (94.756078ms)
FAIL src/renderers/__tests__/songbook-renderer.test.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/services/diverse/storage/local-storage-provider.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../local-storage-provider' from 'tests/services/diverse/storage/local-storage-provider.test.ts'

    > 1 | import { LocalStorageProvider } from '../local-storage-provider';
        | ^
      2 | import { FileMetadata } from '../storage-provider.interface';
      3 |
      4 | // Mock localStorage

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/storage/local-storage-provider.test.ts:1:1)

PASS src/renderers/__tests__/base-renderer.test.ts
  BaseRenderer
    render
      ‚úì should render complete chordsheet with metadata (5 ms)
      ‚úì should render without metadata when option is disabled (6 ms)
      ‚úì should handle multiple sections with spacing (1 ms)
      ‚úì should throw error if chordsheet cannot be rendered (97 ms)
      ‚úì should include rendering time in metadata (2 ms)
    renderSection
      ‚úì should render section with title and lines (1 ms)
      ‚úì should render section without title (2 ms)
    renderLine
      ‚úì should delegate to line renderer (1 ms)
    canRender
      ‚úì should return true for valid chordsheet
      ‚úì should return false for null chordsheet (1 ms)
      ‚úì should return false for chordsheet without sections (1 ms)
      ‚úì should return false for chordsheet with invalid sections
    mergeOptions
      ‚úì should use defaults when no options provided (2 ms)
      ‚úì should merge provided options with defaults (1 ms)
      ‚úì should merge whitespace rules (1 ms)

PASS tests/components/animations/AnimationCoordinator.test.tsx
  AnimationCoordinator
    ‚úì provides animation coordinator context (86 ms)
    ‚úì starts animations correctly (96 ms)
    ‚úì ends animations correctly (10 ms)
    ‚úì auto-ends animations after duration (90 ms)
    ‚úì manages performance modes correctly (11 ms)
    ‚úì queues animations when at capacity (76 ms)
    ‚úì handles priority correctly (6 ms)
    ‚úì throws error when used outside provider (122 ms)
  withAnimationCoordination
    ‚úì wraps component with animation coordination (73 ms)
  AnimationPerformanceMonitor
    ‚úì monitors performance without rendering UI (4 ms)
    ‚úì calls performance callback (4 ms)

PASS src/renderers/__tests__/line-renderer.test.ts
  LineRenderer
    renderTextLine
      ‚úì should render text line without chords (3 ms)
      ‚úì should render text line with inline chords for ChordPro format (1 ms)
      ‚úì should render text line with chords above for Songbook format
      ‚úì should preserve original text when option is enabled (10 ms)
      ‚úì should handle chord placement override (1 ms)
    renderEmptyLine
      ‚úì should render single empty line (1 ms)
      ‚úì should render multiple empty lines (70 ms)
    renderAnnotationLine
      ‚úì should render ChordPro comment annotation
      ‚úì should render ChordPro instruction annotation
      ‚úì should render OnSong comment annotation (1 ms)
      ‚úì should render Songbook comment with spacing
      ‚úì should render Guitar Tabs comment annotation (1 ms)
      ‚úì should render Nashville comment annotation (1 ms)
    renderLine
      ‚úì should route to correct renderer based on line type (1 ms)
      ‚úì should throw error for unknown line type (96 ms)

FAIL tests/services/diverse/storage/cloud-storage-integration.test.ts
  Cloud Storage Integration
    StorageProviderFactory
      ‚úì should create local storage provider (4 ms)
      ‚úì should create Google Drive provider (2 ms)
      ‚úì should create Dropbox provider (67 ms)
      ‚úì should create OneDrive provider (2 ms)
      ‚úì should create iCloud provider (1 ms)
      ‚úì should throw error for unknown provider (21 ms)
      ‚úì should return available providers (71 ms)
      ‚úì should check provider configuration (2 ms)
      ‚úì should detect configured providers with env vars (3 ms)
      ‚úì should return missing configuration (2 ms)
      ‚úì should get provider configuration details (5 ms)
    OAuthManager
      ‚úì should generate OAuth state (8 ms)
      ‚úï should store and retrieve tokens (2 ms)
      ‚úì should detect expired tokens (70 ms)
      ‚úï should check authentication status (6 ms)
      ‚úï should clear all tokens (3 ms)
    Provider Authentication Status
      ‚úì should correctly report authentication status for cloud providers (2 ms)
      ‚úì should handle local storage provider authentication (2 ms)
      ‚úì should handle provider creation without configuration (13 ms)

  ‚óè Cloud Storage Integration ‚Ä∫ OAuthManager ‚Ä∫ should store and retrieve tokens

    expect(received).toEqual(expected) // deep equality

    Expected: {"accessToken": "test-access-token", "expiresAt": 1753813879586, "refreshToken": "test-refresh-token", "tokenType": "Bearer"}
    Received: null

      153 |       const retrieved = OAuthManager.getTokens('test-provider');
      154 |
    > 155 |       expect(retrieved).toEqual(tokens);
          |                         ^
      156 |     });
      157 |
      158 |     it('should detect expired tokens', () => {

      at Object.<anonymous> (tests/services/diverse/storage/cloud-storage-integration.test.ts:155:25)

  ‚óè Cloud Storage Integration ‚Ä∫ OAuthManager ‚Ä∫ should check authentication status

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      185 |
      186 |       OAuthManager.storeTokens('test-provider', tokens);
    > 187 |       expect(OAuthManager.isAuthenticated('test-provider')).toBe(true);
          |                                                             ^
      188 |     });
      189 |
      190 |     it('should clear all tokens', () => {

      at Object.<anonymous> (tests/services/diverse/storage/cloud-storage-integration.test.ts:187:61)

  ‚óè Cloud Storage Integration ‚Ä∫ OAuthManager ‚Ä∫ should clear all tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      199 |       OAuthManager.storeTokens('provider2', tokens);
      200 |
    > 201 |       expect(OAuthManager.isAuthenticated('provider1')).toBe(true);
          |                                                         ^
      202 |       expect(OAuthManager.isAuthenticated('provider2')).toBe(true);
      203 |
      204 |       OAuthManager.clearAllTokens();

      at Object.<anonymous> (tests/services/diverse/storage/cloud-storage-integration.test.ts:201:57)

PASS src/tests/unit/value-objects/chord-root.test.ts
  ChordRoot
    constructor
      ‚úì should create valid chord roots (4 ms)
      ‚úì should reject invalid chord roots (95 ms)
      ‚úì should normalize input by trimming whitespace (1 ms)
      ‚úì should throw error for null or undefined input (3 ms)
    toString
      ‚úì should return string representation
    equals
      ‚úì should return true for equal chord roots (1 ms)
      ‚úì should return false for different chord roots (1 ms)
    accidental detection
      ‚úì should detect sharp notes (2 ms)
      ‚úì should detect flat notes (2 ms)
      ‚úì should detect natural notes (3 ms)
    enharmonic equivalents
      ‚úì should return correct enharmonic equivalents (79 ms)
      ‚úì should return null for natural notes without enharmonic equivalents (1 ms)
    chromatic index
      ‚úì should return correct chromatic indices (2 ms)
    fromChromaticIndex
      ‚úì should create chord roots from chromatic indices with sharps (2 ms)
      ‚úì should create chord roots from chromatic indices with flats (5 ms)
      ‚úì should throw error for invalid chromatic indices (2 ms)
    transpose
      ‚úì should transpose correctly with positive semitones (1 ms)
      ‚úì should transpose correctly with negative semitones
      ‚úì should wrap around octave correctly (1 ms)
      ‚úì should handle negative wrap-around (1 ms)
      ‚úì should prefer flats when specified (1 ms)
      ‚úì should prefer sharps when specified
    static methods
      isValid
        ‚úì should return true for valid chord roots (1 ms)
        ‚úì should return false for invalid chord roots (1 ms)
      getAllValidRoots
        ‚úì should return all valid chord roots (1 ms)
        ‚úì should return a copy of the array

FAIL tests/services/diverse/storage/file-operations.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../format-detector' from 'tests/services/diverse/storage/file-operations.test.ts'

       5 |
       6 | // Mock the FormatDetector and AutoKeyDetection
    >  7 | jest.mock('../format-detector');
         |      ^
       8 | jest.mock('../auto-key-detection');
       9 |
      10 | const mockFormatDetector = FormatDetector as jest.MockedClass<typeof FormatDetector>;

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/storage/file-operations.test.ts:7:6)

FAIL src/tests/setup.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

PASS src/renderers/__tests__/chordpro-renderer.test.ts
  ChordProRenderer
    format property
      ‚úì should have correct format (190 ms)
    getDefaultWhitespaceRules
      ‚úì should return ChordPro-specific whitespace rules (1 ms)
    renderMetadata
      ‚úì should render ChordPro-style metadata (3 ms)
      ‚úì should not render metadata when option is disabled (1 ms)
      ‚úì should handle missing metadata gracefully (2 ms)
    renderSectionTitle
      ‚úì should render verse section with directive (1 ms)
      ‚úì should render chorus section with directive (1 ms)
      ‚úì should render bridge section with directive (1 ms)
      ‚úì should render pre-chorus section with prechorus directive
      ‚úì should render unknown section types as comments
      ‚úì should not render section title when not provided (1 ms)
    escapeSpecialCharacters
      ‚úì should escape ChordPro special characters (1 ms)
    canRender
      ‚úì should return true for valid chordsheet (1 ms)
      ‚úì should return false for invalid chordsheet
    full rendering
      ‚úì should render complete ChordPro document (1 ms)
      ‚úì should preserve original text when requested

PASS tests/components/editor/LineRenderer.test.tsx
  LineRenderer
    TextLineRenderer
      ‚úì renders text line without chords (90 ms)
      ‚úì renders text line with chords above (default) (4 ms)
      ‚úì renders text line with inline chords (82 ms)
    EmptyLineRenderer
      ‚úì renders single empty line by default (5 ms)
      ‚úì renders multiple empty lines when count is specified (7 ms)
    AnnotationLineRenderer
      ‚úì renders comment annotation (8 ms)
      ‚úì renders instruction annotation with proper styling (82 ms)
      ‚úì renders tempo annotation (6 ms)
      ‚úì renders dynamics annotation (8 ms)
    LineRenderer (main component)
      ‚úì renders text line correctly (3 ms)
      ‚úì renders empty line correctly (80 ms)
      ‚úì renders annotation line correctly (5 ms)
      ‚úì renders fallback for unknown line types (3 ms)

PASS tests/components/animations/FormatTransition.test.tsx
  FormatTransition
    ‚úì renders current format correctly (11 ms)
    ‚úì shows previous format when provided (83 ms)
    ‚úì displays progress indicator (7 ms)
    ‚úì applies custom className (5 ms)
    ‚úì handles different transition types (6 ms)
  useFormatTransition
    ‚úì manages format transition state correctly (5 ms)
    ‚úì changes format correctly (79 ms)
    ‚úì tracks previous format correctly (8 ms)
    ‚úì resets transition correctly (4 ms)
    ‚úì ignores same format changes (5 ms)
  PresetFormatTransition
    ‚úì renders with smooth preset (4 ms)
    ‚úì renders with quick preset (3 ms)
    ‚úì renders with dramatic preset (78 ms)
    ‚úì applies custom className (3 ms)

PASS tests/types/error.test.ts
  Error Types
    ErrorType enum
      ‚úì should have all required error types (76 ms)
      ‚úì should have exactly 6 error types (2 ms)
      ‚úì should contain only string values (2 ms)
    AppError interface
      ‚úì should accept valid error objects with all properties (2 ms)
      ‚úì should accept error with only required properties (1 ms)
      ‚úì should accept all error types (3 ms)
      ‚úì should accept various context types (1 ms)
    Result type
      ‚úì should accept successful results
      ‚úì should accept error results (1 ms)
      ‚úì should work with different data types (1 ms)
      ‚úì should work with custom error types (1 ms)
    ValidationResult interface
      ‚úì should accept valid validation results (1 ms)
      ‚úì should accept invalid validation results (1 ms)
      ‚úì should accept validation result without warnings (1 ms)
      ‚úì should accept validation result with empty arrays (1 ms)

PASS src/renderers/__tests__/renderer-factory.test.ts
  RendererFactory
    getInstance
      ‚úì should return singleton instance (3 ms)
    createRenderer
      ‚úì should create ChordPro renderer (1 ms)
      ‚úì should create OnSong renderer
      ‚úì should create Songbook renderer (1 ms)
      ‚úì should create Guitar Tabs renderer (1 ms)
      ‚úì should create Nashville renderer (1 ms)
      ‚úì should throw error for unsupported format (11 ms)
    getSupportedFormats
      ‚úì should return all supported formats (2 ms)
    isFormatSupported
      ‚úì should return true for supported formats (1 ms)
      ‚úì should return false for unsupported formats
    getRenderer
      ‚úì should return renderer for supported format
      ‚úì should return null for unsupported format (1 ms)
    registerRenderer
      ‚úì should register custom renderer (1 ms)
      ‚úì should override existing renderer
    unregisterRenderer
      ‚úì should unregister existing renderer (1 ms)
      ‚úì should return false for non-existent renderer (1 ms)
      ‚úì should not affect other renderers (1 ms)

PASS tests/types/chordsheet.test.ts
  ChordSheet Types
    ChordSheet interface
      ‚úì should accept valid chord sheet objects (3 ms)
      ‚úì should accept chord sheet with optional properties undefined (2 ms)
      ‚úì should accept all notation formats (1 ms)
      ‚úì should accept chord sheet with multiple sections (1 ms)
      ‚úì should accept chord sheet with complex metadata
      ‚úì should require all mandatory properties (1 ms)
      ‚úì should maintain consistency between convenience properties and metadata (1 ms)

FAIL tests/services/diverse/__tests__/file-operations-e2e.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../services/file-operations' from 'tests/services/diverse/__tests__/file-operations-e2e.test.ts'

    > 1 | import { FileOperations } from '../services/file-operations';
        | ^
      2 | import { ConversionEngine } from '../services/conversion-engine-old/conversion-engine';
      3 | import { NotationFormat } from '../types';
      4 |

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/__tests__/file-operations-e2e.test.ts:1:1)

PASS tests/components/animations/ChordTransition.test.tsx
  ChordTransition
    ‚úì renders chord transitions correctly (10 ms)
    ‚úì applies correct styling for changing chords (11 ms)
    ‚úì positions chords correctly (9 ms)
    ‚úì has proper accessibility attributes (6 ms)
    ‚úì applies custom className (4 ms)
  useChordTransition
    ‚úì manages transition state correctly (3 ms)
    ‚úì starts transition correctly (3 ms)
    ‚úì completes transition correctly (5 ms)
  calculateChordPositions
    ‚úì calculates positions correctly for single line (1 ms)
    ‚úì calculates positions correctly for multiple lines
    ‚úì handles empty text (1 ms)
    ‚úì handles different font sizes (1 ms)

FAIL tests/services/conversion/format-detector-samples.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/services/conversion-engine/format-detector' from 'tests/services/conversion/format-detector-samples.test.ts'

      2 | import { expect } from '@playwright/test';
      3 |
    > 4 | import { FormatDetector } from '../../../src/services/conversion-engine/format-detector';
        | ^
      5 | import { NotationFormat } from '../../../src/types';
      6 |
      7 | describe('FormatDetector - Real World Samples', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/format-detector-samples.test.ts:4:1)

PASS tests/types/index.test.ts
  Types Index
    Format Types Exports
      ‚úì should export NotationFormat enum (3 ms)
      ‚úì should export SectionType enum (1 ms)
      ‚úì should export AnnotationFormat enum (2 ms)
    Core Data Model Exports
      ‚úì should export Chord interface (1 ms)
      ‚úì should export Annotation interface
      ‚úì should export Section interface (1 ms)
      ‚úì should export Metadata interface (1 ms)
      ‚úì should export ChordSheet interface
    Error Handling Exports
      ‚úì should export ErrorType enum (1 ms)
      ‚úì should export AppError interface (1 ms)
      ‚úì should export Result type (1 ms)
      ‚úì should export ValidationResult interface (1 ms)
    Type Integration
      ‚úì should allow creating complex objects using all exported types (1 ms)

PASS src/hooks/__tests__/useResponsive.test.ts
  useResponsive
    ‚úì returns desktop breakpoint for large screens (8 ms)
    ‚úì returns tablet breakpoint for medium screens (19 ms)
    ‚úì returns mobile breakpoint for small screens (5 ms)
    ‚úì handles breakpoint boundaries correctly (7 ms)
    ‚úì updates state when window is resized (3 ms)
    ‚úì adds and removes resize event listener (3 ms)
    ‚úì handles server-side rendering gracefully (2 ms)

FAIL tests/services/conversion/conversion-engine.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/conversion-engine-old/conversion-engine' from 'tests/services/conversion/conversion-engine.test.ts'

    > 1 | import { ConversionEngine } from '../../../../src/services/conversion-engine-old/conversion-engine';
        | ^
      2 | import { NotationFormat } from '../../../src/types';
      3 |
      4 | describe('ConversionEngine', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/conversion-engine.test.ts:1:1)

PASS tests/types/section.test.ts
  Section Types
    Section interface
      ‚úì should accept valid section objects (2 ms)
      ‚úì should accept section with empty chords and annotations (1 ms)
      ‚úì should accept all section types (1 ms)
      ‚úì should accept section with multiple chords (1 ms)
      ‚úì should accept section with multiple annotations (1 ms)
      ‚úì should require all mandatory properties (1 ms)

PASS tests/types/metadata.test.ts
  Metadata Types
    Metadata interface
      ‚úì should accept valid metadata objects with all properties (3 ms)
      ‚úì should accept metadata with only some properties (2 ms)
      ‚úì should accept empty metadata object (2 ms)
      ‚úì should accept various time signatures (1 ms)
      ‚úì should accept various key signatures (2 ms)
      ‚úì should accept custom metadata with various types (1 ms)
      ‚úì should accept reasonable tempo values (1 ms)
      ‚úì should accept reasonable capo values (2 ms)

PASS src/hooks/__tests__/useDebounce.test.ts
  useDebounce
    ‚úì should return initial value immediately (5 ms)
    ‚úì should debounce value changes (4 ms)
    ‚úì should reset timer on rapid changes (2 ms)
    ‚úì should handle different delay values (2 ms)
    ‚úì should handle different value types (3 ms)
    ‚úì should handle object values (2 ms)

FAIL tests/types/format.test.ts
  Format Types
    NotationFormat enum
      ‚úì should have all required notation formats (2 ms)
      ‚úì should have exactly 6 notation formats (1 ms)
      ‚úì should contain only string values (1 ms)
    SectionType enum
      ‚úì should have all required section types (2 ms)
      ‚úï should have exactly 11 section types (1 ms)
      ‚úì should contain only string values (2 ms)
    AnnotationFormat enum
      ‚úì should have all required annotation formats
      ‚úì should have exactly 5 annotation formats
      ‚úì should contain only string values

  ‚óè Format Types ‚Ä∫ SectionType enum ‚Ä∫ should have exactly 11 section types

    expect(received).toHaveLength(expected)

    Expected length: 11
    Received length: 14
    Received array:  ["verse", "chorus", "bridge", "intro", "outro", "instrumental", "pre_chorus", "post_chorus", "tag", "vamp", ‚Ä¶]

      41 |     it('should have exactly 11 section types', () => {
      42 |       const sectionValues = Object.values(SectionType);
    > 43 |       expect(sectionValues).toHaveLength(11);
         |                             ^
      44 |     });
      45 |
      46 |     it('should contain only string values', () => {

      at Object.<anonymous> (tests/types/format.test.ts:43:29)

FAIL tests/services/conversion/chord-pro.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/chord-pro' from 'tests/services/conversion/chord-pro.test.ts'

      1 | import { describe, it } from 'node:test';
      2 | import { expect } from '@playwright/test';
    > 3 | import { ChordProParser } from '../../../src/parsers/annotations/chord-pro';
        | ^
      4 | import { AnnotationFormat } from '../../../src/types';
      5 |
      6 | describe('ChordProParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/chord-pro.test.ts:3:1)

FAIL tests/services/conversion/guitar-tabs.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/guitar-tabs' from 'tests/services/conversion/guitar-tabs.test.ts'

    > 1 | import { GuitarTabsParser } from '../../../src/parsers/annotations/guitar-tabs';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('GuitarTabsParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/guitar-tabs.test.ts:1:1)

FAIL tests/services/conversion/planning-center.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/planning-center' from 'tests/services/conversion/planning-center.test.ts'

    > 1 | import { PlanningCenterParser } from '../../../src/parsers/annotations/planning-center';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('PlanningCenterParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/planning-center.test.ts:1:1)

FAIL tests/services/conversion/songbook.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/songbook' from 'tests/services/conversion/songbook.test.ts'

    > 1 | import { SongbookParser } from '../../../src/parsers/annotations/songbook';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('SongbookParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/songbook.test.ts:1:1)

FAIL tests/services/conversion/on-song.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/on-song' from 'tests/services/conversion/on-song.test.ts'

    > 1 | import { OnSongParser } from '../../../src/parsers/annotations/on-song';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('OnSongParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/on-song.test.ts:1:1)

FAIL src/tests/global-setup.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL src/tests/global-teardown.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/services/conversion/songbook-parser.test.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/components/integration/MusicConverter.integration.test.tsx
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

Summary of all failing tests
FAIL src/renderers/__tests__/comprehensive-renderer.test.ts (6.412 s)
  ‚óè Comprehensive Renderer Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty chordsheets gracefully

    Cannot render chordsheet in songbook format

      74 |         
      75 |         if (!this.canRender(chordsheet)) {
    > 76 |             throw new Error(`Cannot render chordsheet in ${this.format} format`);
         |                   ^
      77 |         }
      78 |
      79 |         const mergedOptions = this.mergeOptions(options);

      at SongbookRenderer.render (src/renderers/core/base-renderer.ts:76:19)
      at src/renderers/__tests__/comprehensive-renderer.test.ts:681:33
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/renderers/__tests__/comprehensive-renderer.test.ts:679:15)

  ‚óè Comprehensive Renderer Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle chordsheets with only empty lines

    Cannot render chordsheet in songbook format

      74 |         
      75 |         if (!this.canRender(chordsheet)) {
    > 76 |             throw new Error(`Cannot render chordsheet in ${this.format} format`);
         |                   ^
      77 |         }
      78 |
      79 |         const mergedOptions = this.mergeOptions(options);

      at SongbookRenderer.render (src/renderers/core/base-renderer.ts:76:19)
      at src/renderers/__tests__/comprehensive-renderer.test.ts:707:33
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/renderers/__tests__/comprehensive-renderer.test.ts:705:15)

FAIL tests/e2e/accessibility.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Accessibility Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/accessibility.spec.ts:3:6)

FAIL tests/components/editor/OutputPreview.test.tsx (9.312 s)
  ‚óè OutputPreview ‚Ä∫ Basic Rendering ‚Ä∫ applies custom className

    TestingLibraryElementError: Unable to find an accessible element with the role "main"

    Here are the accessible roles:

      heading:

      Name "Preview":
      [36m<h3[39m
        [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Toggle line numbers":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle line numbers"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Toggle compact mode":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle compact mode"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 custom-class"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle line numbers"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m#[0m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle compact mode"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mCompact[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"font-mono text-sm leading-relaxed"[39m
              [36m>[39m
                [36m<pre[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-gray-900 dark:text-dark-text"[39m
                  [33mstyle[39m=[32m"font-family: JetBrains Mono, Consolas, Monaco, \"Courier New\", monospace; line-height: 1.5; font-size: 0.875rem; tab-size: 2;"[39m
                [36m>[39m
                  [0mtest[0m
                [36m</pre>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      168 |       // If the component passes the className to its main container, this should work.
      169 |       // If OutputPreview's root element is a div with role='main', this is a good selector.
    > 170 |       const previewContainer = screen.getByRole('main');
          |                                       ^
      171 |       expect(previewContainer).toHaveClass('custom-class');
      172 |     });
      173 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:170:39)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should publish preview update events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"chordsheet": {"id": "test-1", "originalKey": "C", "sections": [], "title": "Test Song"}}, "type": "PreviewUpdated"}

    Number of calls: 0

      330 |       );
      331 |
    > 332 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      333 |         expect.objectContaining({
      334 |           type: 'PreviewUpdated',
      335 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:332:40)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should auto-save preview content when enabled

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ObjectContaining {"chordsheet": {"id": "test-1", "originalKey": "C", "sections": [], "title": "Test Song"}}

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
            [36m>[39m
              [36m<h3[39m
                [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
              [36m>[39m
                [0mPreview[0m
              [36m</h3>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-2"[39m
                [36m>[39m
                  [36m<button[39m
                    [33maria-label[39m=[32m"Toggle line numbers"[39m
                    [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0m#[0m
                  [36m</button>[39m
                  [36m<button[39m
                    [33maria-label[39m=[32m"Toggle compact mode"[39m
                    [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                    [33mtype[39m=[32m"button"[39m
                  [36m>[39m
                    [0mCompact[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
              [36m>[39m
                [36m<div[39m
                  [33maria-label[39m=[32m"Chord sheet preview"[39m
                  [33mclass[39m=[32m"space-y-4"[39m
                  [33mrole[39m=[32m"main"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"mb-6 pb-4 border-b border-gray-200 dark:border-dark-border"[39m
                  [36m>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"font-bold text-gray-900 dark:text-dark-text text-xl"[39m
                    [36m>[39m
                      [0mTest Song[0m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"text-gray-500 dark:text-gray-400 mt-1 text-sm"[39m
                    [36m>[39m
                      [0mKey: [0m
                      [0mC[0m
                    [36m</p>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      355 |
      356 |       await waitFor(() => {
    > 357 |         expect(mockStorageService.save).toHaveBeenCalledWith(
          |                                         ^
      358 |           expect.any(String), // The key for saving
      359 |           expect.objectContaining({
      360 |             chordsheet: chordsheet

      at tests/components/editor/OutputPreview.test.tsx:357:41
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should handle conversion errors gracefully

    Unable to find an element with the text: /conversion error/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle line numbers"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m#[0m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle compact mode"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mCompact[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"font-mono text-sm leading-relaxed"[39m
              [36m>[39m
                [36m<pre[39m
                  [33mclass[39m=[32m"whitespace-pre-wrap text-gray-900 dark:text-dark-text"[39m
                  [33mstyle[39m=[32m"font-family: JetBrains Mono, Consolas, Monaco, \"Courier New\", monospace; line-height: 1.5; font-size: 0.875rem; tab-size: 2;"[39m
                [36m>[39m
                  [0mtest content[0m
                [36m</pre>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      376 |       );
      377 |
    > 378 |       await waitFor(() => {
          |                    ^
      379 |         expect(screen.getByText(/conversion error/i)).toBeInTheDocument();
      380 |       });
      381 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:378:20)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should subscribe to conversion events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "ConversionCompleted", Any<Function>

    Number of calls: 0

      390 |       );
      391 |
    > 392 |       expect(mockEventManager.subscribe).toHaveBeenCalledWith(
          |                                          ^
      393 |         'ConversionCompleted',
      394 |         expect.any(Function)
      395 |       );

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:392:42)

  ‚óè OutputPreview ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should handle real-time updates from conversion engine

    Unable to find an element with the text: Converted content. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col items-center justify-center h-full text-center p-8"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mb-4"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"mx-auto text-gray-300 dark:text-gray-600 h-16 w-16"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"1.5"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</div>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"font-medium text-gray-900 dark:text-dark-text text-lg"[39m
                [36m>[39m
                  [0mNo content to preview[0m
                [36m</h3>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-gray-500 dark:text-gray-400 max-w-sm text-base"[39m
                [36m>[39m
                  [0mEnter or paste your chord sheet content in the editor to see the converted output here.[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      425 |       }
      426 |
    > 427 |       await waitFor(() => {
          |                    ^
      428 |         expect(screen.getByText('Converted content')).toBeInTheDocument();
      429 |       });
      430 |     });

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:427:20)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ has proper accessibility attributes

    TestingLibraryElementError: Unable to find an accessible element with the role "region" and name "Verse section"

    Here are the accessible roles:

      heading:

      Name "Preview":
      [36m<h3[39m
        [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
      [36m/>[39m

      Name "Test Song":
      [36m<h1[39m
        [33mclass[39m=[32m"font-bold text-gray-900 dark:text-dark-text text-xl"[39m
      [36m/>[39m

      Name "Verse 1":
      [36m<h3[39m
        [33mclass[39m=[32m"text-sm font-semibold text-gray-700 uppercase tracking-wide"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Toggle line numbers":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle line numbers"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Toggle compact mode":
      [36m<button[39m
        [33maria-label[39m=[32m"Toggle compact mode"[39m
        [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------
      main:

      Name "Chord sheet preview":
      [36m<div[39m
        [33maria-label[39m=[32m"Chord sheet preview"[39m
        [33mclass[39m=[32m"space-y-4"[39m
        [33mrole[39m=[32m"main"[39m
      [36m/>[39m

      --------------------------------------------------
      paragraph:

      Name "":
      [36m<p[39m
        [33mclass[39m=[32m"text-gray-500 dark:text-gray-400 mt-1 text-sm"[39m
      [36m/>[39m

      --------------------------------------------------
      region:

      Name "Verse 1 section":
      [36m<div[39m
        [33maria-label[39m=[32m"Verse 1 section"[39m
        [33mclass[39m=[32m"section mb-6 border-l-4 border-blue-300 bg-blue-50/30 mb-4"[39m
        [33mrole[39m=[32m"region"[39m
      [36m/>[39m

      --------------------------------------------------
      text:

      Name "Text line: Test line":
      [36m<div[39m
        [33maria-label[39m=[32m"Text line: Test line"[39m
        [33mclass[39m=[32m"text-line mb-1"[39m
        [33mrole[39m=[32m"text"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center space-x-2"[39m
              [36m>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle line numbers"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m#[0m
                [36m</button>[39m
                [36m<button[39m
                  [33maria-label[39m=[32m"Toggle compact mode"[39m
                  [33mclass[39m=[32m"text-xs px-2 py-1 rounded border transition-colors bg-white dark:bg-dark-surface text-gray-600 dark:text-gray-400 border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-hover"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0mCompact[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33maria-label[39m=[32m"Chord sheet preview"[39m
                [33mclass[39m=[32m"space-y-4"[39m
                [33mrole[39m=[32m"main"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mb-6 pb-4 border-b border-gray-200 dark:border-dark-border"[39m
                [36m>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"font-bold text-gray-900 dark:text-dark-text text-xl"[39m
                  [36m>[39m
                    [0mTest Song[0m
                  [36m</h1>[39m
                  [36m<p[39m
                    [33mclass[39m=[32m"text-gray-500 dark:text-gray-400 mt-1 text-sm"[39m
                  [36m>[39m
                    [0mKey: [0m
                    [0mC[0m
                  [36m</p>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33maria-label[39m=[32m"Verse 1 section"[39m
                  [33mclass[39m=[32m"section mb-6 border-l-4 border-blue-300 bg-blue-50/30 mb-4"[39m
                  [33mrole[39m=[32m"region"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"section-header px-4 py-2 bg-white/50 border-b border-gray-200/50"[39m
                  [36m>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-sm font-semibold text-gray-700 uppercase tracking-wide"[39m
                    [36m>[39m
                      [0mVerse 1[0m
                    [36m</h3>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"section-content px-4 py-3 space-y-2"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33maria-label[39m=[32m"Text line: Test line"[39m
                      [33mclass[39m=[32m"text-line mb-1"[39m
                      [33mrole[39m=[32m"text"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"font-mono text-sm leading-relaxed whitespace-pre"[39m
                      [36m>[39m
                        [0mTest line[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      454 |       expect(screen.getByRole('main')).toHaveAttribute('aria-label', 'Chord sheet preview');
      455 |       // Assuming the section renders a role="region" with its title as aria-label
    > 456 |       expect(screen.getByRole('region', { name: 'Verse section' })).toBeInTheDocument();
          |                     ^
      457 |     });
      458 |
      459 |     it('should announce loading state to screen readers', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:456:21)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ should announce loading state to screen readers

    TestingLibraryElementError: Unable to find an element with the text: /Converting content/i, which matches selector '.sr-only'. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"absolute inset-0 flex items-center justify-center bg-white/90 dark:bg-dark-bg/90 backdrop-blur-sm z-10"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"text-center p-6 bg-white dark:bg-dark-surface rounded-lg shadow-lg border border-gray-200 dark:border-dark-border max-w-sm mx-4"[39m
              [36m>[39m
                [36m<div[39m
                  [33maria-live[39m=[32m"polite"[39m
                  [33mclass[39m=[32m"flex items-center justify-center space-x-3 "[39m
                  [33mrole[39m=[32m"status"[39m
                  [33mstyle[39m=[32m"opacity: 0;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"rounded-full border-2 border-gray-200 h-6 w-6"[39m
                    [33mstyle[39m=[32m"border-top-color: var(--color-blue-600);"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-600 dark:text-gray-400 text-base transition-colors duration-200"[39m
                    [33mstyle[39m=[32m"opacity: 0; transform: translateX(-10px);"[39m
                  [36m>[39m
                    [0mConverting...[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"sr-only"[39m
                  [36m>[39m
                    [0mConverting...[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"h-full overflow-auto p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex flex-col items-center justify-center h-full text-center p-8"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"mb-4"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"mx-auto text-gray-300 dark:text-gray-600 h-16 w-16"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"1.5"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                [36m</div>[39m
                [36m<h3[39m
                  [33mclass[39m=[32m"font-medium text-gray-900 dark:text-dark-text text-lg"[39m
                [36m>[39m
                  [0mNo content to preview[0m
                [36m</h3>[39m
                [36m<p[39m
                  [33mclass[39m=[32m"mt-2 text-gray-500 dark:text-gray-400 max-w-sm text-base"[39m
                [36m>[39m
                  [0mEnter or paste your chord sheet content in the editor to see the converted output here.[0m
                [36m</p>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      465 |
      466 |       // This expects a visually hidden element with aria-live="polite" and the text "Converting content"
    > 467 |       const loadingAnnouncement = screen.getByText(/Converting content/i, { selector: '.sr-only' });
          |                                          ^
      468 |       expect(loadingAnnouncement).toHaveAttribute('aria-live', 'polite');
      469 |     });
      470 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:467:42)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ should announce errors to screen readers

    TestingLibraryElementError: Unable to find an element with the text: /Error occurred/i, which matches selector '.sr-only'. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"h-full flex flex-col bg-white dark:bg-dark-bg border border-gray-200 dark:border-dark-border rounded-lg overflow-hidden transition-colors duration-200 "[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-shrink-0 h-14 px-4 py-3 bg-gray-50 dark:bg-dark-surface border-b border-gray-200 dark:border-dark-border flex items-center justify-between"[39m
          [36m>[39m
            [36m<h3[39m
              [33mclass[39m=[32m"font-semibold text-gray-700 dark:text-gray-300 text-base"[39m
            [36m>[39m
              [0mPreview[0m
            [36m</h3>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex items-center space-x-2"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex-1 relative overflow-hidden"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"p-4"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-4 transition-colors duration-200"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-start"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex-shrink-0"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33mclass[39m=[32m"h-5 w-5 text-red-400 dark:text-red-500"[39m
                      [33mfill[39m=[32m"currentColor"[39m
                      [33mviewBox[39m=[32m"0 0 20 20"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33mclip-rule[39m=[32m"evenodd"[39m
                        [33md[39m=[32m"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"[39m
                        [33mfill-rule[39m=[32m"evenodd"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"ml-3 flex-1"[39m
                  [36m>[39m
                    [36m<h3[39m
                      [33mclass[39m=[32m"text-sm font-medium text-red-800 dark:text-red-300"[39m
                    [36m>[39m
                      [0mConversion Error[0m
                    [36m</h3>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"mt-2 text-sm text-red-700 dark:text-red-400"[39m
                    [36m>[39m
                      [36m<p>[39m
                        [0mTest error[0m
                      [36m</p>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      478 |
      479 |       // This expects a visually hidden element with aria-live="assertive" and the text "Error occurred"
    > 480 |       const errorAnnouncement = screen.getByText(/Error occurred/i, { selector: '.sr-only' });
          |                                        ^
      481 |       expect(errorAnnouncement).toHaveAttribute('aria-live', 'assertive');
      482 |     });
      483 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:480:40)

  ‚óè OutputPreview ‚Ä∫ Accessibility ‚Ä∫ should support keyboard navigation

    expect(element).toHaveAttribute("tabIndex", "0") // element.getAttribute("tabIndex") === "0"

    Expected the element to have attribute:
      tabIndex="0"
    Received:
      null

      502 |
      503 |       const previewContainer = screen.getByRole('main');
    > 504 |       expect(previewContainer).toHaveAttribute('tabIndex', '0');
          |                                ^
      505 |     });
      506 |   });
      507 |

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:504:32)

  ‚óè OutputPreview ‚Ä∫ Performance ‚Ä∫ should cleanup event subscriptions on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      545 |
      546 |       // Expect unsubscribe to have been called at least once
    > 547 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      548 |     });
      549 |
      550 |     it('should handle large chordsheets efficiently', () => {

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:547:44)

  ‚óè OutputPreview ‚Ä∫ Error Handling ‚Ä∫ should handle missing services gracefully

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      597 |       // You might want to add an assertion here, e.g., expect(screen.getByText('Error loading services')).toBeInTheDocument();
      598 |       // if your component provides such a fallback.
    > 599 |       expect(consoleSpy).toHaveBeenCalled(); // Expect console error if services are null
          |                          ^
      600 |
      601 |       consoleSpy.mockRestore();
      602 |     });

      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:599:26)

  ‚óè OutputPreview ‚Ä∫ Error Handling ‚Ä∫ should handle malformed chordsheet data

    TypeError: Cannot read properties of null (reading 'map')

      265 |                 
      266 |                 {/* Sections */}
    > 267 |                 {contentToRender.data.sections.map((section, index) => (
          |                                                ^
      268 |                   <SectionRenderer 
      269 |                     key={`section-${index}`} 
      270 |                     section={section}

      at OutputPreview (src/components/editor/OutputPreview.tsx:267:48)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (tests/components/editor/OutputPreview.test.tsx:612:13)

FAIL tests/e2e/performance.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Performance Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/performance.spec.ts:3:6)

FAIL tests/services/conversion/comprehensive-integration.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/conversion-engine-old/conversion-engine' from 'tests/services/conversion/comprehensive-integration.test.ts'

      1 | import { describe, it, expect, beforeEach, afterEach } from '@jest/globals';
    > 2 | import { ConversionEngine } from '../../../../src/services/conversion-engine-old/conversion-engine';
        | ^
      3 | import { FormatDetector } from '../format-detector';
      4 | import { FileOperations } from '../../../src/services/file-operations';
      5 | import { NotationFormat } from '../../../src/types/format';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/comprehensive-integration.test.ts:2:1)

FAIL tests/e2e/ui-functionality.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('UI Functionality Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/ui-functionality.spec.ts:3:6)

FAIL tests/services/diverse/__tests__/auto-key-detection.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../utils/chord-parser' from 'src/services/key-detector.ts'

    Require stack:
      src/services/key-detector.ts
      tests/services/diverse/__tests__/auto-key-detection.test.ts

      1 | import { Chord } from '../types';
    > 2 | import { ChordParser } from '../utils/chord-parser';
        | ^
      3 | import { MAJOR_KEY_SIGNATURES, MINOR_KEY_SIGNATURES, NASHVILLE_MAJOR_MAPPINGS } from '../constants/chord-mappings';
      4 |
      5 | /**

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/services/key-detector.ts:2:1)
      at Object.<anonymous> (tests/services/diverse/__tests__/auto-key-detection.test.ts:1:1)

FAIL tests/e2e/visual-regression.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Visual Regression Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/visual-regression.spec.ts:3:6)

FAIL tests/types/validation.test.ts
  ‚óè Validation Utilities ‚Ä∫ validateLines ‚Ä∫ should reject array with invalid lines

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      270 |
      271 |             const result = validateLines(invalidLines);
    > 272 |             expect(result.valid).toBe(false);
          |                                  ^
      273 |             expect(result.errors.some(e => e.field === 'lines[1]')).toBe(true);
      274 |         });
      275 |     });

      at Object.<anonymous> (tests/types/validation.test.ts:272:34)

FAIL tests/components/controls/KeySelector.test.tsx
  ‚óè KeySelector ‚Ä∫ Basic Rendering ‚Ä∫ displays key options from transposer service

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      107 |       
      108 |       // Verify that keys are loaded from the service
    > 109 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      110 |     });
      111 |
      112 |     it('shows the selected value', () => {

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:109:50)

  ‚óè KeySelector ‚Ä∫ Basic Rendering ‚Ä∫ includes both major and minor keys

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      137 |       
      138 |       // Verify the component requests available keys
    > 139 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      140 |       
      141 |       // The actual key options will be populated from the mock
      142 |       const select = screen.getByRole('combobox');

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:139:50)

  ‚óè KeySelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should get available keys from key transposer

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      217 |       );
      218 |       
    > 219 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      220 |     });
      221 |
      222 |     it('should publish key change events', async () => {

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:219:50)

  ‚óè KeySelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should publish key change events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"newKey": "G", "oldKey": "C"}, "type": "KeyChanged"}

    Number of calls: 0

      234 |       fireEvent.change(select, { target: { value: 'G' } });
      235 |       
    > 236 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      237 |         expect.objectContaining({
      238 |           type: 'KeyChanged',
      239 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:236:40)

  ‚óè KeySelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should validate key selection through transposer service

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "InvalidKey"
    Received: ""

    Number of calls: 1

      262 |       
      263 |       // Component should still call onChange even with invalid key
    > 264 |       expect(mockOnChange).toHaveBeenCalledWith('InvalidKey');
          |                            ^
      265 |       
      266 |       // Reset mock for other tests
      267 |       mockKeyTransposer.isValidKey.mockReturnValue(true);

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:264:28)

  ‚óè KeySelector ‚Ä∫ Accessibility ‚Ä∫ should have proper ARIA attributes

    expect(element).toHaveAttribute("aria-label", Any<String>) // element.getAttribute("aria-label") === Any<String>

    Expected the element to have attribute:
      aria-label=Any<String>
    Received:
      null

      339 |       
      340 |       const select = screen.getByRole('combobox');
    > 341 |       expect(select).toHaveAttribute('aria-label', expect.any(String));
          |                      ^
      342 |     });
      343 |
      344 |     it('should support keyboard navigation', async () => {

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:341:22)

  ‚óè KeySelector ‚Ä∫ Accessibility ‚Ä∫ should be accessible to screen readers

    expect(element).toHaveValue(G)

    Expected the element to have value:
      G
    Received:
      C

      379 |       
      380 |       // The component should maintain accessible behavior
    > 381 |       expect(select).toHaveValue('G');
          |                      ^
      382 |     });
      383 |   });
      384 |

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:381:22)

  ‚óè KeySelector ‚Ä∫ Error Handling ‚Ä∫ should handle invalid key values

    expect(element).toHaveValue(InvalidKey)

    Expected the element to have value:
      InvalidKey
    Received:
      C

      444 |       const select = screen.getByRole('combobox');
      445 |       expect(select).toBeInTheDocument();
    > 446 |       expect(select).toHaveValue('InvalidKey');
          |                      ^
      447 |     });
      448 |   });
      449 |

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:446:22)

  ‚óè KeySelector ‚Ä∫ Performance ‚Ä∫ should cleanup event subscriptions on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      490 |       unmount();
      491 |       
    > 492 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      493 |     });
      494 |   });
      495 |

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:492:44)

  ‚óè KeySelector ‚Ä∫ Props Validation ‚Ä∫ should handle all common musical keys

    expect(element).toHaveValue(Cb)

    Expected the element to have value:
      Cb
    Received:
      C

      511 |         
      512 |         const select = screen.getByRole('combobox');
    > 513 |         expect(select).toHaveValue(key);
          |                        ^
      514 |         
      515 |         unmount();
      516 |       });

      at tests/components/controls/KeySelector.test.tsx:513:24
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:501:37)

  ‚óè KeySelector ‚Ä∫ Props Validation ‚Ä∫ should support custom key lists

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      546 |       );
      547 |       
    > 548 |       expect(mockKeyTransposer.getAvailableKeys).toHaveBeenCalled();
          |                                                  ^
      549 |       
      550 |       unmount();
      551 |       

      at Object.<anonymous> (tests/components/controls/KeySelector.test.tsx:548:50)

FAIL tests/components/feedback/ProgressIndicator.test.tsx
  ‚óè ProgressIndicator ‚Ä∫ Progress Validation ‚Ä∫ handles NaN progress values

    expect(element).toHaveAttribute("aria-valuenow", "0") // element.getAttribute("aria-valuenow") === "0"

    Expected the element to have attribute:
      aria-valuenow="0"
    Received:
      aria-valuenow="NaN"

      114 |
      115 |       const progressBar = screen.getByRole('progressbar');
    > 116 |       expect(progressBar).toHaveAttribute('aria-valuenow', '0');
          |                           ^
      117 |     });
      118 |
      119 |     it('handles undefined progress values', () => {

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:116:27)

  ‚óè ProgressIndicator ‚Ä∫ Progress Validation ‚Ä∫ handles undefined progress values

    expect(element).toHaveAttribute("aria-valuenow", "0") // element.getAttribute("aria-valuenow") === "0"

    Expected the element to have attribute:
      aria-valuenow="0"
    Received:
      aria-valuenow="NaN"

      123 |
      124 |       const progressBar = screen.getByRole('progressbar');
    > 125 |       expect(progressBar).toHaveAttribute('aria-valuenow', '0');
          |                           ^
      126 |     });
      127 |   });
      128 |

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:125:27)

  ‚óè ProgressIndicator ‚Ä∫ Styling and Variants ‚Ä∫ applies different color schemes

    expect(element).toHaveClass("bg-green-500")

    Expected the element to have class:
      bg-green-500
    Received:
      h-full rounded-full bg-green-600

      154 |
      155 |       let progressBar = screen.getByRole('progressbar');
    > 156 |       expect(progressBar).toHaveClass('bg-green-500');
          |                           ^
      157 |
      158 |       // Using 'orange' as it's an allowed color and maps to bg-orange-500
      159 |       rerender(<ProgressIndicator progress={50} color="orange" />);

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:156:27)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should publish progress events when progress changes

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"progress": 50}, "type": "ProgressUpdated"}

    Number of calls: 0

      214 |       rerender(<ProgressIndicator progress={50} />);
      215 |
    > 216 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      217 |         expect.objectContaining({
      218 |           type: 'ProgressUpdated',
      219 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:216:40)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should publish completion events when progress reaches 100

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"type": "ProgressCompleted"}

    Number of calls: 0

      227 |       render(<ProgressIndicator progress={100} />);
      228 |
    > 229 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      230 |         expect.objectContaining({
      231 |           type: 'ProgressCompleted'
      232 |         })

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:229:40)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should subscribe to progress events on mount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      238 |
      239 |       // Expect subscribe to have been called at least once
    > 240 |       expect(mockEventManager.subscribe).toHaveBeenCalled();
          |                                          ^
      241 |     });
      242 |
      243 |     it('should unsubscribe from events on unmount', () => {

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:240:42)

  ‚óè ProgressIndicator ‚Ä∫ Event Integration ‚Ä∫ should unsubscribe from events on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      247 |
      248 |       // Expect unsubscribe to have been called at least once
    > 249 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      250 |     });
      251 |   });
      252 |

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:249:44)

  ‚óè ProgressIndicator ‚Ä∫ Animation and Transitions ‚Ä∫ should animate progress changes smoothly

    expect(element).toHaveClass("transition-all")

    Expected the element to have class:
      transition-all
    Received:
      h-full rounded-full bg-blue-600

      256 |
      257 |       const progressBar = screen.getByRole('progressbar');
    > 258 |       expect(progressBar).toHaveClass('transition-all'); // Check for the transition class
          |                           ^
      259 |
      260 |       rerender(<ProgressIndicator progress={75} animated={true} />);
      261 |

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:258:27)

  ‚óè ProgressIndicator ‚Ä∫ Performance ‚Ä∫ should debounce progress events

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      338 |
      339 |       // After advancing timers, only one event should have been published with the last value
    > 340 |       expect(mockEventManager.publish).toHaveBeenCalledTimes(1);
          |                                        ^
      341 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
      342 |         expect.objectContaining({
      343 |           type: 'ProgressUpdated',

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:340:40)

  ‚óè ProgressIndicator ‚Ä∫ Error Handling ‚Ä∫ should handle invalid progress values gracefully

    expect(element).toHaveAttribute("aria-valuenow", "0") // element.getAttribute("aria-valuenow") === "0"

    Expected the element to have attribute:
      aria-valuenow="0"
    Received:
      aria-valuenow="NaN"

      361 |       const progressBar = screen.getByRole('progressbar');
      362 |       // Invalid values should default to 0
    > 363 |       expect(progressBar).toHaveAttribute('aria-valuenow', '0');
          |                           ^
      364 |
      365 |       // Optionally, assert that an error was logged if the component is designed to do so
      366 |       // expect(consoleSpy).toHaveBeenCalledWith(expect.stringContaining('Invalid progress value'));

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:363:27)

  ‚óè ProgressIndicator ‚Ä∫ Error Handling ‚Ä∫ should recover from event manager errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      385 |
      386 |       // Verify that the publish method was still attempted
    > 387 |       expect(mockEventManager.publish).toHaveBeenCalled();
          |                                        ^
      388 |     });
      389 |   });
      390 | });

      at Object.<anonymous> (tests/components/feedback/ProgressIndicator.test.tsx:387:40)

FAIL tests/components/editor/InputEditor.test.tsx
  ‚óè Test suite failed to run

    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m105[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m105[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m105[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m105[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m116[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m116[0m           <InputEditor value=\"\" onChange={mockOnChange} placeholder={customPlaceholder} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m116[0m:[93m92[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m116[0m           <InputEditor value=\"\" onChange={mockOnChange} placeholder={customPlaceholder} />
    [7m   [0m [91m                                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m137[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m137[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m137[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m137[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m149[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m149[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m149[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m149[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m162[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m162[0m           <InputEditor value=\"\" onChange={mockOnChange} disabled={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m162[0m:[93m76[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m162[0m           <InputEditor value=\"\" onChange={mockOnChange} disabled={true} />
    [7m   [0m [91m                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m173[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m173[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m173[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m173[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m190[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m190[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m190[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m190[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m205[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m205[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m205[0m:[93m84[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m205[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                                                                                   ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m220[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m220[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m220[0m:[93m82[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m220[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                                                                                 ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m235[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m235[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m235[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m235[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m257[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m257[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m257[0m:[93m76[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m257[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m284[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m284[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m284[0m:[93m87[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m284[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                                                                                      ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m301[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m301[0m           <InputEditor value=\"\" onChange={mockOnChange} highlightInvalidChords={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m301[0m:[93m90[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m301[0m           <InputEditor value=\"\" onChange={mockOnChange} highlightInvalidChords={true} />
    [7m   [0m [91m                                                                                         ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m318[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m318[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m318[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m318[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m331[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m331[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m331[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m331[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m348[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m348[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m348[0m:[93m87[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m348[0m           <InputEditor value=\"\" onChange={mockOnChange} showFormatDetection={true} />
    [7m   [0m [91m                                                                                      ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m371[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m371[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m371[0m:[93m84[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m371[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                                                                                   ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m392[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m392[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m392[0m:[93m82[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m392[0m           <InputEditor value=\"\" onChange={mockOnChange} validateChords={true} />
    [7m   [0m [91m                                                                                 ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m413[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m413[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m413[0m:[93m76[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m413[0m           <InputEditor value=\"\" onChange={mockOnChange} autoSave={true} />
    [7m   [0m [91m                                                                           ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m437[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m437[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m437[0m:[93m84[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m437[0m           <InputEditor value=\"\" onChange={mockOnChange} autoDetectFormat={true} />
    [7m   [0m [91m                                                                                   ~[0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m463[0m:[93m30[0m - [91merror[0m[90m TS1127: [0mInvalid character.

    [7m463[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                             [0m
    [96mtests/components/editor/InputEditor.test.tsx[0m:[93m463[0m:[93m60[0m - [91merror[0m[90m TS1382: [0mUnexpected token. Did you mean `{'>'}` or `&gt;`?

    [7m463[0m           <InputEditor value=\"\" onChange={mockOnChange} />
    [7m   [0m [91m                                                           ~[0m

FAIL src/tests/performance/benchmarks.test.ts
  ‚óè Performance Benchmarks ‚Ä∫ Chord Factory Performance ‚Ä∫ should create chords efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Chord Factory Performance ‚Ä∫ should handle complex chord creation efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Chord Factory Performance ‚Ä∫ should validate chords efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Key Transposition Performance ‚Ä∫ should transpose chords efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Key Transposition Performance ‚Ä∫ should calculate key distances efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Key Transposition Performance ‚Ä∫ should handle batch transposition efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Event System Performance ‚Ä∫ should handle high-frequency event publishing

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Event System Performance ‚Ä∫ should handle multiple subscribers efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Memory Usage Benchmarks ‚Ä∫ should not leak memory during chord creation

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Memory Usage Benchmarks ‚Ä∫ should handle event subscription/unsubscription without leaks

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Scalability Benchmarks ‚Ä∫ should scale linearly with chord complexity

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Scalability Benchmarks ‚Ä∫ should handle increasing numbers of event subscribers efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Comparison with Legacy Implementation ‚Ä∫ should demonstrate performance improvements

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)

  ‚óè Performance Benchmarks ‚Ä∫ Stress Testing ‚Ä∫ should handle extreme loads without crashing

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      22 |
      23 |   beforeAll(() => {
    > 24 |     container = createConfiguredContainer({
         |                                          ^
      25 |       storageType: 'memory',
      26 |       errorRecoveryLevel: 'moderate'
      27 |     });

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:24:42)


  ‚óè Test suite failed to run

    TypeError: Cannot read properties of undefined (reading 'dispose')

      33 |
      34 |   afterAll(() => {
    > 35 |     container.dispose();
         |               ^
      36 |   });
      37 |
      38 |   describe('Chord Factory Performance', () => {

      at Object.<anonymous> (src/tests/performance/benchmarks.test.ts:35:15)

FAIL src/tests/unit/events/event-manager.test.ts
  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should subscribe and receive events

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:42:20)

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should handle multiple subscribers for same event

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:59:20)

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should handle multiple events for same subscriber

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:70:20)

  ‚óè EventManager ‚Ä∫ subscribe and publish ‚Ä∫ should not call handlers for different event types

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:80:20)

  ‚óè EventManager ‚Ä∫ unsubscribe ‚Ä∫ should unsubscribe handlers

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:93:20)

  ‚óè EventManager ‚Ä∫ unsubscribe ‚Ä∫ should only unsubscribe specific handler

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:107:20)

  ‚óè EventManager ‚Ä∫ clear ‚Ä∫ should clear all event handlers

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:132:20)

  ‚óè EventManager ‚Ä∫ subscribeToMultiple ‚Ä∫ should subscribe to multiple event types

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:188:20)

  ‚óè EventManager ‚Ä∫ unsubscribeFromMultiple ‚Ä∫ should unsubscribe from multiple event types

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:202:20)

  ‚óè EventManager ‚Ä∫ subscribeOnce ‚Ä∫ should unsubscribe after first event

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:215:20)

  ‚óè EventManager ‚Ä∫ async handlers ‚Ä∫ should handle async event handlers

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:230:20)

  ‚óè EventManager ‚Ä∫ async handlers ‚Ä∫ should handle async handler errors gracefully

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:243:20)

  ‚óè EventManager ‚Ä∫ error handling ‚Ä∫ should handle synchronous handler errors gracefully

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:265:20)

  ‚óè EventManager ‚Ä∫ error handling ‚Ä∫ should continue processing other handlers after error

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:285:20)

  ‚óè EventManager ‚Ä∫ handler modification during event processing ‚Ä∫ should handle handlers being removed during event processing

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:382:20)

  ‚óè EventManager ‚Ä∫ handler modification during event processing ‚Ä∫ should handle handlers being added during event processing

    TypeError: Cannot read properties of undefined (reading 'type')

      21 |     }
      22 |
    > 23 |     const eventHandlers = this.handlers.get(event.type);
         |                                                   ^
      24 |     if (!eventHandlers || eventHandlers.size === 0) {
      25 |       return;
      26 |     }

      at EventManager.publish (src/services/events/event-manager.ts:23:51)
      at Object.<anonymous> (src/tests/unit/events/event-manager.test.ts:400:20)

FAIL tests/components/controls/FormatSelector.test.tsx
  ‚óè FormatSelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should get supported formats from conversion engine

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      201 |       );
      202 |       
    > 203 |       expect(mockConversionEngine.getSupportedFormats).toHaveBeenCalled();
          |                                                        ^
      204 |     });
      205 |
      206 |     it('should publish format change events', async () => {

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:203:56)

  ‚óè FormatSelector ‚Ä∫ SOLID Architecture Integration ‚Ä∫ should publish format change events

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"data": ObjectContaining {"newFormat": "onsong", "oldFormat": "chordpro"}, "type": "FormatChanged"}

    Number of calls: 0

      218 |       fireEvent.change(select, { target: { value: NotationFormat.ONSONG } });
      219 |       
    > 220 |       expect(mockEventManager.publish).toHaveBeenCalledWith(
          |                                        ^
      221 |         expect.objectContaining({
      222 |           type: 'FormatChanged',
      223 |           data: expect.objectContaining({

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:220:40)

  ‚óè FormatSelector ‚Ä∫ Accessibility ‚Ä∫ should have proper ARIA attributes

    expect(element).toHaveAttribute("aria-label", Any<String>) // element.getAttribute("aria-label") === Any<String>

    Expected the element to have attribute:
      aria-label=Any<String>
    Received:
      null

      282 |       
      283 |       const select = screen.getByRole('combobox');
    > 284 |       expect(select).toHaveAttribute('aria-label', expect.any(String));
          |                      ^
      285 |     });
      286 |
      287 |     it('should support keyboard navigation', async () => {

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:284:22)

  ‚óè FormatSelector ‚Ä∫ Error Handling ‚Ä∫ should handle invalid format values

    expect(element).toHaveValue(INVALID_FORMAT)

    Expected the element to have value:
      INVALID_FORMAT
    Received:
      nashville

      377 |       
      378 |       // Component should still render without crashing
    > 379 |       expect(select).toHaveValue('INVALID_FORMAT');
          |                      ^
      380 |     });
      381 |   });
      382 |

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:379:22)

  ‚óè FormatSelector ‚Ä∫ Performance ‚Ä∫ should cleanup event subscriptions on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      395 |       unmount();
      396 |       
    > 397 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      398 |     });
      399 |
      400 |     it('should not re-fetch formats on every render', () => {

      at Object.<anonymous> (tests/components/controls/FormatSelector.test.tsx:397:44)

FAIL tests/services/conversion/enhanced-conversion-engine.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/conversion-engine-old/conversion-engine' from 'tests/services/conversion/enhanced-conversion-engine.test.ts'

    > 1 | import { ConversionEngine } from '../../../../src/services/conversion-engine-old/conversion-engine';
        | ^
      2 | import { ConversionOptions } from '../conversion-engine-old/types/ConversionOptions';
      3 | import { ConversionProgress } from '../conversion-engine-old/types/ConversionProgress';
      4 | import { PerformanceMetrics } from '../conversion-engine-old/types/PerformanceMetrics';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/enhanced-conversion-engine.test.ts:1:1)

FAIL src/constants/__tests__/chord-mappings.test.ts
  ‚óè Chord Mappings Constants ‚Ä∫ NASHVILLE_MAJOR_MAPPINGS ‚Ä∫ should have 7 mappings for each key

    expect(received).toHaveLength(expected)

    Expected length: 7
    Received length: 12
    Received array:  ["C", "D", "E", "F", "G", "A", "B", "C#", "D#", "F#", ‚Ä¶]

      158 |     it('should have 7 mappings for each key', () => {
      159 |       Object.values(NASHVILLE_MAJOR_MAPPINGS).forEach(mapping => {
    > 160 |         expect(Object.keys(mapping)).toHaveLength(7);
          |                                      ^
      161 |       });
      162 |     });
      163 |   });

      at src/constants/__tests__/chord-mappings.test.ts:160:38
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/constants/__tests__/chord-mappings.test.ts:159:47)

  ‚óè Chord Mappings Constants ‚Ä∫ NASHVILLE_MINOR_MAPPINGS ‚Ä∫ should have 7 mappings for each key

    expect(received).toHaveLength(expected)

    Expected length: 7
    Received length: 12
    Received array:  ["A", "B", "C", "D", "E", "F", "G", "C#", "D#", "F#", ‚Ä¶]

      184 |     it('should have 7 mappings for each key', () => {
      185 |       Object.values(NASHVILLE_MINOR_MAPPINGS).forEach(mapping => {
    > 186 |         expect(Object.keys(mapping)).toHaveLength(7);
          |                                      ^
      187 |       });
      188 |     });
      189 |   });

      at src/constants/__tests__/chord-mappings.test.ts:186:38
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/constants/__tests__/chord-mappings.test.ts:185:47)

  ‚óè Chord Mappings Constants ‚Ä∫ Data integrity ‚Ä∫ should have all Nashville mappings initialized

    expect(received).toHaveLength(expected)

    Expected length: 7
    Received length: 12
    Received array:  ["C", "D", "E", "F", "G", "A", "B", "C#", "D#", "F#", ‚Ä¶]

      325 |       Object.keys(MAJOR_KEY_SIGNATURES).forEach(key => {
      326 |         expect(NASHVILLE_MAJOR_MAPPINGS[key]).toBeDefined();
    > 327 |         expect(Object.keys(NASHVILLE_MAJOR_MAPPINGS[key])).toHaveLength(7);
          |                                                            ^
      328 |       });
      329 |
      330 |       Object.keys(MINOR_KEY_SIGNATURES).forEach(key => {

      at src/constants/__tests__/chord-mappings.test.ts:327:60
          at Array.forEach (<anonymous>)
      at Object.<anonymous> (src/constants/__tests__/chord-mappings.test.ts:325:41)

FAIL src/tests/integration/conversion-workflow.test.ts
  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should resolve all core services

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should resolve all core services

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should maintain singleton behavior for registered singletons

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should maintain singleton behavior for registered singletons

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should inject dependencies correctly

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Dependency Injection Integration ‚Ä∫ should inject dependencies correctly

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should create chords using factory and builder patterns

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should create chords using factory and builder patterns

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should validate chords through integrated validation

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Chord Factory and Builder Integration ‚Ä∫ should validate chords through integrated validation

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should transpose chords with command pattern support

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should transpose chords with command pattern support

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should calculate key distances correctly

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should calculate key distances correctly

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should provide key relationship analysis

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Key Transposition Integration ‚Ä∫ should provide key relationship analysis

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should publish and handle events correctly

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should publish and handle events correctly

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should handle multiple subscribers and event types

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Event System Integration ‚Ä∫ should handle multiple subscribers and event types

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should save and load conversion results

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should save and load conversion results

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should handle storage statistics

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Storage System Integration ‚Ä∫ should handle storage statistics

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should detect formats with confidence scoring

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should detect formats with confidence scoring

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should handle multiple format detection

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Format Detection Integration ‚Ä∫ should handle multiple format detection

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Error Recovery Integration ‚Ä∫ should handle parsing errors gracefully

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Error Recovery Integration ‚Ä∫ should handle parsing errors gracefully

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle a complete chord processing workflow

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle a complete chord processing workflow

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle event-driven workflow

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should handle event-driven workflow

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should integrate storage with conversion results

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Complete Workflow Integration ‚Ä∫ should integrate storage with conversion results

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle multiple concurrent operations

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle multiple concurrent operations

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle large numbers of events efficiently

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Performance and Scalability ‚Ä∫ should handle large numbers of events efficiently

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

  ‚óè Conversion Workflow Integration ‚Ä∫ Memory Management ‚Ä∫ should properly dispose of resources

    TypeError: (0 , container_setup_1.createConfiguredContainer) is not a function

      28 |
      29 |   beforeEach(() => {
    > 30 |     container = createConfiguredContainer({
         |                                          ^
      31 |       storageType: 'memory',
      32 |       errorRecoveryLevel: 'moderate'
      33 |     });

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:30:42)

  ‚óè Conversion Workflow Integration ‚Ä∫ Memory Management ‚Ä∫ should properly dispose of resources

    TypeError: Cannot read properties of undefined (reading 'dispose')

      41 |
      42 |   afterEach(() => {
    > 43 |     container.dispose();
         |               ^
      44 |   });
      45 |
      46 |   describe('Dependency Injection Integration', () => {

      at Object.<anonymous> (src/tests/integration/conversion-workflow.test.ts:43:15)

FAIL src/tests/unit/chord/chord-builder.test.ts
  ‚óè ChordBuilder ‚Ä∫ convenience methods ‚Ä∫ should build dominant 7th chord

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      351 |       expect(chord.root).toBe('G');
      352 |       expect(chord.quality).toBe(ChordQuality.DOMINANT);
    > 353 |       expect(chord.extensions).toHaveLength(1);
          |                                ^
      354 |       expect(chord.extensions[0].value).toBe('7');
      355 |       expect(chord.originalNotation).toBe('G7');
      356 |     });

      at Object.<anonymous> (src/tests/unit/chord/chord-builder.test.ts:353:32)

FAIL tests/types/chord.test.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/types/line.test.ts
  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject null or undefined

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      264 |
      265 |             it('should reject null or undefined', () => {
    > 266 |                 expect(validateLine(null)).toBe(false);
          |                                            ^
      267 |                 expect(validateLine(undefined)).toBe(false);
      268 |             });
      269 |

      at Object.<anonymous> (tests/types/line.test.ts:266:44)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject non-object values

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      269 |
      270 |             it('should reject non-object values', () => {
    > 271 |                 expect(validateLine('string')).toBe(false);
          |                                                ^
      272 |                 expect(validateLine(123)).toBe(false);
      273 |                 expect(validateLine([])).toBe(false);
      274 |             });

      at Object.<anonymous> (tests/types/line.test.ts:271:48)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject invalid type

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      280 |                 };
      281 |
    > 282 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      283 |             });
      284 |
      285 |             it('should reject TextLine with missing text', () => {

      at Object.<anonymous> (tests/types/line.test.ts:282:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject TextLine with missing text

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      289 |                 };
      290 |
    > 291 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      292 |             });
      293 |
      294 |             it('should reject TextLine with non-array chords', () => {

      at Object.<anonymous> (tests/types/line.test.ts:291:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject TextLine with non-array chords

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      299 |                 };
      300 |
    > 301 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      302 |             });
      303 |
      304 |             it('should reject EmptyLine with invalid count', () => {

      at Object.<anonymous> (tests/types/line.test.ts:301:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject EmptyLine with invalid count

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      308 |                 };
      309 |
    > 310 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      311 |             });
      312 |
      313 |             it('should reject AnnotationLine with missing value', () => {

      at Object.<anonymous> (tests/types/line.test.ts:310:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject AnnotationLine with missing value

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      317 |                 };
      318 |
    > 319 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      320 |             });
      321 |
      322 |             it('should reject AnnotationLine with invalid annotationType', () => {

      at Object.<anonymous> (tests/types/line.test.ts:319:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject AnnotationLine with invalid annotationType

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      327 |                 };
      328 |
    > 329 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      330 |             });
      331 |
      332 |             it('should reject lines with invalid lineNumber', () => {

      at Object.<anonymous> (tests/types/line.test.ts:329:51)

  ‚óè Line Types ‚Ä∫ Line Validation ‚Ä∫ validateLine ‚Ä∫ should reject lines with invalid lineNumber

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      338 |                 };
      339 |
    > 340 |                 expect(validateLine(invalidLine)).toBe(false);
          |                                                   ^
      341 |             });
      342 |         });
      343 |     });

      at Object.<anonymous> (tests/types/line.test.ts:340:51)

FAIL tests/e2e/responsive-design.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Responsive Design Tests', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     await page.goto('/');
      6 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.<anonymous> (tests/e2e/responsive-design.spec.ts:3:6)

FAIL tests/services/conversion/format-detector.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../format-detector' from 'tests/services/conversion/format-detector.test.ts'

    > 1 | import { FormatDetector } from '../format-detector';
        | ^
      2 | import { NotationFormat } from '../../../src/types';
      3 |
      4 | describe('FormatDetector', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/format-detector.test.ts:1:1)

FAIL tests/components/editor/SectionRenderer.test.tsx
  ‚óè SectionRenderer ‚Ä∫ Event Integration ‚Ä∫ should subscribe to section events on mount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      266 |       render(<SectionRenderer section={section} />);
      267 |       
    > 268 |       expect(mockEventManager.subscribe).toHaveBeenCalled();
          |                                          ^
      269 |     });
      270 |
      271 |     it('should unsubscribe from events on unmount', () => {

      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:268:42)

  ‚óè SectionRenderer ‚Ä∫ Event Integration ‚Ä∫ should unsubscribe from events on unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      286 |       unmount();
      287 |       
    > 288 |       expect(mockEventManager.unsubscribe).toHaveBeenCalled();
          |                                            ^
      289 |     });
      290 |   });
      291 |

      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:288:44)

  ‚óè SectionRenderer ‚Ä∫ Error Handling ‚Ä∫ handles invalid section data gracefully

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'length')"

          93 |       
          94 |       <div className="section-content px-4 py-3 space-y-2">
        > 95 |         {section.lines.length === 0 ? (
             |                        ^
          96 |           <div className="text-gray-400 italic text-sm">
          97 |             (Empty section)
          98 |           </div>

      at SectionRenderer (src/components/editor/SectionRenderer.tsx:95:24)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at tests/components/editor/SectionRenderer.test.tsx:343:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:344:14)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:344:14)

  ‚óè SectionRenderer ‚Ä∫ Error Handling ‚Ä∫ handles missing line data gracefully

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'type')"

          170 |
          171 | export const isTextLine = (line: Line): line is TextLine => {
        > 172 |   return line.type === 'text';
              |               ^
          173 | };
          174 |
          175 | export const isEmptyLine = (line: Line): boolean => {

      at isTextLine (src/types/line.ts:172:15)
      at LineRenderer (src/components/editor/LineRenderer.tsx:209:17)
      at Object.react-stack-bottom-frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at tests/components/editor/SectionRenderer.test.tsx:364:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:365:14)
      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:365:14)

  ‚óè SectionRenderer ‚Ä∫ Performance ‚Ä∫ handles large sections efficiently

    expect(received).toBeLessThan(expected)

    Expected: < 100
    Received:   177.0423829999927

      391 |
      392 |       // Should render within reasonable time (less than 100ms)
    > 393 |       expect(endTime - startTime).toBeLessThan(100);
          |                                   ^
      394 |     });
      395 |   });
      396 | });

      at Object.<anonymous> (tests/components/editor/SectionRenderer.test.tsx:393:35)

FAIL tests/services/diverse/__tests__/error-recovery.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/error-recovery/error-recovery' from 'tests/services/diverse/__tests__/error-recovery.test.ts'

      1 | import { describe, it, expect, beforeEach } from '@jest/globals';
    > 2 | import { ErrorRecoveryService } from '../../../../src/services/error-recovery/error-recovery';
        | ^
      3 | import { ConversionErrorFactory, ConversionErrorType } from '../../../../src/types/conversion-error';
      4 | import { TextLine, AnnotationLine } from '../../../../src/types/line';
      5 |

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/__tests__/error-recovery.test.ts:2:1)

FAIL src/renderers/__tests__/songbook-renderer.test.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/services/diverse/storage/local-storage-provider.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../local-storage-provider' from 'tests/services/diverse/storage/local-storage-provider.test.ts'

    > 1 | import { LocalStorageProvider } from '../local-storage-provider';
        | ^
      2 | import { FileMetadata } from '../storage-provider.interface';
      3 |
      4 | // Mock localStorage

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/storage/local-storage-provider.test.ts:1:1)

FAIL tests/services/diverse/storage/cloud-storage-integration.test.ts
  ‚óè Cloud Storage Integration ‚Ä∫ OAuthManager ‚Ä∫ should store and retrieve tokens

    expect(received).toEqual(expected) // deep equality

    Expected: {"accessToken": "test-access-token", "expiresAt": 1753813879586, "refreshToken": "test-refresh-token", "tokenType": "Bearer"}
    Received: null

      153 |       const retrieved = OAuthManager.getTokens('test-provider');
      154 |
    > 155 |       expect(retrieved).toEqual(tokens);
          |                         ^
      156 |     });
      157 |
      158 |     it('should detect expired tokens', () => {

      at Object.<anonymous> (tests/services/diverse/storage/cloud-storage-integration.test.ts:155:25)

  ‚óè Cloud Storage Integration ‚Ä∫ OAuthManager ‚Ä∫ should check authentication status

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      185 |
      186 |       OAuthManager.storeTokens('test-provider', tokens);
    > 187 |       expect(OAuthManager.isAuthenticated('test-provider')).toBe(true);
          |                                                             ^
      188 |     });
      189 |
      190 |     it('should clear all tokens', () => {

      at Object.<anonymous> (tests/services/diverse/storage/cloud-storage-integration.test.ts:187:61)

  ‚óè Cloud Storage Integration ‚Ä∫ OAuthManager ‚Ä∫ should clear all tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      199 |       OAuthManager.storeTokens('provider2', tokens);
      200 |
    > 201 |       expect(OAuthManager.isAuthenticated('provider1')).toBe(true);
          |                                                         ^
      202 |       expect(OAuthManager.isAuthenticated('provider2')).toBe(true);
      203 |
      204 |       OAuthManager.clearAllTokens();

      at Object.<anonymous> (tests/services/diverse/storage/cloud-storage-integration.test.ts:201:57)

FAIL tests/services/diverse/storage/file-operations.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../format-detector' from 'tests/services/diverse/storage/file-operations.test.ts'

       5 |
       6 | // Mock the FormatDetector and AutoKeyDetection
    >  7 | jest.mock('../format-detector');
         |      ^
       8 | jest.mock('../auto-key-detection');
       9 |
      10 | const mockFormatDetector = FormatDetector as jest.MockedClass<typeof FormatDetector>;

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/storage/file-operations.test.ts:7:6)

FAIL src/tests/setup.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/services/diverse/__tests__/file-operations-e2e.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../services/file-operations' from 'tests/services/diverse/__tests__/file-operations-e2e.test.ts'

    > 1 | import { FileOperations } from '../services/file-operations';
        | ^
      2 | import { ConversionEngine } from '../services/conversion-engine-old/conversion-engine';
      3 | import { NotationFormat } from '../types';
      4 |

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/diverse/__tests__/file-operations-e2e.test.ts:1:1)

FAIL tests/services/conversion/format-detector-samples.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/services/conversion-engine/format-detector' from 'tests/services/conversion/format-detector-samples.test.ts'

      2 | import { expect } from '@playwright/test';
      3 |
    > 4 | import { FormatDetector } from '../../../src/services/conversion-engine/format-detector';
        | ^
      5 | import { NotationFormat } from '../../../src/types';
      6 |
      7 | describe('FormatDetector - Real World Samples', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/format-detector-samples.test.ts:4:1)

FAIL tests/services/conversion/conversion-engine.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../../src/services/conversion-engine-old/conversion-engine' from 'tests/services/conversion/conversion-engine.test.ts'

    > 1 | import { ConversionEngine } from '../../../../src/services/conversion-engine-old/conversion-engine';
        | ^
      2 | import { NotationFormat } from '../../../src/types';
      3 |
      4 | describe('ConversionEngine', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/conversion-engine.test.ts:1:1)

FAIL tests/types/format.test.ts
  ‚óè Format Types ‚Ä∫ SectionType enum ‚Ä∫ should have exactly 11 section types

    expect(received).toHaveLength(expected)

    Expected length: 11
    Received length: 14
    Received array:  ["verse", "chorus", "bridge", "intro", "outro", "instrumental", "pre_chorus", "post_chorus", "tag", "vamp", ‚Ä¶]

      41 |     it('should have exactly 11 section types', () => {
      42 |       const sectionValues = Object.values(SectionType);
    > 43 |       expect(sectionValues).toHaveLength(11);
         |                             ^
      44 |     });
      45 |
      46 |     it('should contain only string values', () => {

      at Object.<anonymous> (tests/types/format.test.ts:43:29)

FAIL tests/services/conversion/chord-pro.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/chord-pro' from 'tests/services/conversion/chord-pro.test.ts'

      1 | import { describe, it } from 'node:test';
      2 | import { expect } from '@playwright/test';
    > 3 | import { ChordProParser } from '../../../src/parsers/annotations/chord-pro';
        | ^
      4 | import { AnnotationFormat } from '../../../src/types';
      5 |
      6 | describe('ChordProParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/chord-pro.test.ts:3:1)

FAIL tests/services/conversion/guitar-tabs.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/guitar-tabs' from 'tests/services/conversion/guitar-tabs.test.ts'

    > 1 | import { GuitarTabsParser } from '../../../src/parsers/annotations/guitar-tabs';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('GuitarTabsParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/guitar-tabs.test.ts:1:1)

FAIL tests/services/conversion/planning-center.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/planning-center' from 'tests/services/conversion/planning-center.test.ts'

    > 1 | import { PlanningCenterParser } from '../../../src/parsers/annotations/planning-center';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('PlanningCenterParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/planning-center.test.ts:1:1)

FAIL tests/services/conversion/songbook.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/songbook' from 'tests/services/conversion/songbook.test.ts'

    > 1 | import { SongbookParser } from '../../../src/parsers/annotations/songbook';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('SongbookParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/songbook.test.ts:1:1)

FAIL tests/services/conversion/on-song.test.ts
  ‚óè Test suite failed to run

    Cannot find module '../../../src/parsers/annotations/on-song' from 'tests/services/conversion/on-song.test.ts'

    > 1 | import { OnSongParser } from '../../../src/parsers/annotations/on-song';
        | ^
      2 | import { AnnotationFormat } from '../../../src/types';
      3 |
      4 | describe('OnSongParser', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/services/conversion/on-song.test.ts:1:1)

FAIL src/tests/global-setup.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL src/tests/global-teardown.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/services/conversion/songbook-parser.test.ts
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

FAIL tests/components/integration/MusicConverter.integration.test.tsx
  ‚óè Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)
      at node_modules/@jest/core/build/TestScheduler.js:254:19
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)


Test Suites: 43 failed, 21 passed, 64 total
Tests:       116 failed, 599 passed, 715 total
Snapshots:   0 total
Time:        301.747 s
Ran all test suites.
‚Ñπ tests 46
‚Ñπ suites 20
‚Ñπ pass 17
‚Ñπ fail 29
‚Ñπ cancelled 0
‚Ñπ skipped 0
‚Ñπ todo 0
‚Ñπ duration_ms 124910.090804

‚úñ failing tests:

test at tests/types/chord.test.ts:8:28
‚úñ should create a valid ChordPlacement (1.137721ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:16:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at startSubtestAfterBootstrap (node:internal/test_runner/harness:332:3)

test at tests/types/chord.test.ts:22:28
‚úñ should create ChordPlacement without optional placement (0.225489ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:29:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at startSubtestAfterBootstrap (node:internal/test_runner/harness:332:3)

test at tests/types/chord.test.ts:35:28
‚úñ should accept all valid placement values (0.177829ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at /home/runner/workspace/tests/types/chord.test.ts:45:40
      at Array.forEach (<anonymous>)
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:37:24)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:50:28
‚úñ should create a valid Chord (0.42911ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:62:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:69:28
‚úñ should create Chord without optional fields (0.21918ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:76:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:83:28
‚úñ should accept all chord qualities (2.27926ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at /home/runner/workspace/tests/types/chord.test.ts:92:40
      at Array.forEach (<anonymous>)
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:85:23)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:97:28
‚úñ should create valid ChordExtension (0.924741ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:103:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:107:28
‚úñ should accept all extension types (70.371192ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at /home/runner/workspace/tests/types/chord.test.ts:115:40
      at Array.forEach (<anonymous>)
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:109:19)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:121:32
‚úñ should validate a valid ChordPlacement (0.66385ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:129:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:131:32
‚úñ should validate ChordPlacement without optional placement (0.29623ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:138:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:140:32
‚úñ should reject null or undefined (0.19234ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:141:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:144:32
‚úñ should reject non-object values (0.21417ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:145:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:148:32
‚úñ should reject missing required fields (0.17389ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:155:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:157:32
‚úñ should reject invalid startIndex/endIndex (0.15483ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:164:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:166:32
‚úñ should reject negative startIndex (0.14733ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:173:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:175:32
‚úñ should reject invalid placement value (0.18254ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:183:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:187:32
‚úñ should validate a valid Chord (0.37005ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:198:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:200:32
‚úñ should validate Chord without optional fields (0.176609ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:207:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:209:32
‚úñ should reject null or undefined (0.15342ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:210:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:213:32
‚úñ should reject invalid quality (0.1825ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:220:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:222:32
‚úñ should reject invalid extensions array (0.28774ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:229:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:233:32
‚úñ should validate a valid ChordExtension (0.23844ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:239:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:241:32
‚úñ should reject null or undefined (0.15096ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:242:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:245:32
‚úñ should reject invalid type (0.15447ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:251:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:253:32
‚úñ should reject missing required fields (0.16802ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:259:40)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:264:28
‚úñ should have all expected values (0.23892ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:265:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:272:28
‚úñ should contain exactly 6 values (0.15404ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:274:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:279:28
‚úñ should accept valid annotation objects (0.22405ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:285:36)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Test.start (node:internal/test_runner/test:959:17)
      at node:internal/test_runner/test:1464:71
      at node:internal/per_context/primordials:483:82
      at new Promise (<anonymous>)
      at new SafePromise (node:internal/per_context/primordials:451:29)
      at node:internal/per_context/primordials:483:9
      at Array.map (<anonymous>)
      at arrayToSafePromiseIterable (node:internal/per_context/primordials:480:5)
      at node:internal/per_context/primordials:497:21
      at new Promise (<anonymous>)
      at node:internal/per_context/primordials:496:3
      at Suite.run (node:internal/test_runner/test:1464:23)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

test at tests/types/chord.test.ts:289:28
‚úñ should accept all valid position values (0.17202ms)
  TypeError: (0 , node_test_1.expect) is not a function
      at /home/runner/workspace/tests/types/chord.test.ts:297:40
      at Array.forEach (<anonymous>)
      at TestContext.<anonymous> (/home/runner/workspace/tests/types/chord.test.ts:291:23)
      at Test.runInAsyncScope (node:async_hooks:214:14)
      at Test.run (node:internal/test_runner/test:1062:25)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:18)
      at Test.postRun (node:internal/test_runner/test:1191:19)
      at Test.run (node:internal/test_runner/test:1119:12)
      at async Promise.all (index 0)
      at Suite.run (node:internal/test_runner/test:1466:7)
      at Suite.processPendingSubtests (node:internal/test_runner/test:752:7)

